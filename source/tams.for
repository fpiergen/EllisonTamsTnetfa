C          THE TAMS PROGRAM AND ALL RELATED MATERIAL ARE     
C          AS - IS .........
C    THE FOLLOWING DIMENSIONS MUST BE EQUAL TO OR GREATER 
C    THAN THE NUMBER OF SOURCES
C
	DIMENSION XS(20), DXS(20), YS(20), DYS(20), XSC(20), YSC(20), Q(20
     1), LOC(20), TEMPS(20), TEMPL(20), TEMP(20), X2S(20), Y2S(20) 
C    
C    THE FOLLOWING DIMENSIONS MUST BE EQUAL TO OR GREATER THAN THE
C    NUMBER OF LEADS
C
	DIMENSION XL(20), DXL(20), YL(20), DYL(20), XLC(20), YLC(20), R(20
     1), T0(20), SW1(20), F(20), TL(20), X2L(20), Y2L(20) 
C     THE FOLLOWING DIMENSIONS C(NL,NL+1) MUST CONTAIN NL EQUAL TO
C     OR GREATER THAN THE NUMBER OF LEADS
	DIMENSION C(20,21)
C
C    THE FOLLOWING DIMENSIONS MUST BE EQUAL TO OR GREATER THAN THE 
C    INPUT DATA FOR LMAX, MMAX
C      
	DIMENSION AL(70), AM(70), ALM(70,70), SPSUM(70),
     1  BL(70), BM(70), BLM(70,70),
     2  AIL(70), AIM(70), AILM(70,70),
     3  BIL(70), BIM(70), BILM(70,70) 
	DIMENSION JC(20), VV(2)
	CHARACTER*80  TITLE
	REAL K1,K2,K3,K4,K21,K32,K43,K12,K23,K34
	DIMENSION LINE(50)
	REAL K1X,K1Y,K2X,K2Y,K3X,K3Y,K4X,K4Y
	REAL KFX1,KFY1,KFX2,KFY2,KFX3,KFY3,KFX4,KFY4
C
C
C    FCN DEF STATEMENTS
	GAM(V,W,ZX,ZY) = SQRT((((V - 1.0) * AP) ** 2) * ZX + (((W
     1    - 1.0) * BP) **2) *ZY)
	GAML(V,ZX) = (V - 1.0) * AP * SQRT (ZX)
	GAMM(V,ZY) = (V - 1.0) * BP * SQRT (ZY)
	R4L(V) = K43 * (TH4 + (H2K4 / GAML(V,KFX4))) * GL4 / GL3
	S4L(V) = 1.0 + (H2K4 / GAML(V,KFX4)) * TH4
	UL(V) = TH1 + (H1K1 / GAML(V,KFX1))
	VL(V) = 1.0 + (H1K1 / GAML(V,KFX1)) * TH1
	RSCL(V) = R4L(V) * TH3 + S4L(V)
	RCSL(V) = (R4L(V) + S4L(V) * TH3)
	R4M(V) = K43 * (TH4 + (H2K4 / GAMM(V,KFY4)))*GM4 / GM3
	S4M(V) = 1.0 + (H2K4 / GAMM(V,KFY4)) * TH4
	UM(V) = TH1 + (H1K1 / GAMM(V,KFY1))
	VM(V) = 1.0 + (H1K1 / GAMM(V,KFY1)) * TH1
	RSCM(V) = R4M(V) * TH3 + S4M(V)
	RCSM(V) = R4M(V) + S4M(V) * TH3
	R4LM(V,W) = K43 * (TH4 + (H2K4 / GAM(V,W,KFX4
     1      ,KFY4))) * GLM4 / GLM3
	S4LM(V,W) = 1.0 + (H2K4 / GAM(V,W,KFX4,KFY4)) * TH4
	ULM(V,W) = TH1 + (H1K1 / GAM(V,W,KFX1,KFY1))
	VLM(V,W) = 1.0 + (H1K1 / GAM(V,W,KFX1,KFY1)) * TH1
	RSC(V,W) = R4LM(V,W) * TH3 + S4LM(V,W)
	RCS(V,W) = (R4LM(V,W) + S4LM(V,W) * TH3)
C
C OPEN INPUT/OUTPUT FILES
C
	OPEN(UNIT=1,FILE='INPUT.DAT',STATUS='OLD')
	OPEN(UNIT=2,FILE='D1OUT.DAT',STATUS='NEW')
	OPEN(UNIT=3,FILE='D2OUT.DAT',STATUS='NEW')
	OPEN(UNIT=4,FILE='D3OUT.DAT',STATUS='NEW')
	PI = 3.1415926535
C     INPUT DATA
C     TITLE CARD
      READ (1,710) TITLE
C     TEST FOR PROBLEM TYPE
C     ITEST = 1 = CALCULATE TEMPERATURE AT Z=0, LEADS
C     AT Z=0, T1+T2+T3+T4
C     Z=0,    NETWON'S LAW COOLING AT Z=T1 + T2 + T3 + T4
C     ITEST=2 - CALCULATE TEMPERATURE AT Z=0 FOR SOURCES AND LEADS AT
C     Z=0,   ISOTHERMAL TA AT Z=T1 + T2 + T3 + T4
C     ITEST=3 - CALCULATE TEMPERATURE AT Z=0 FOR SOURCES AND LEADS AT
C     Z=T1,   NEWTON'S LAW COOLING AT Z=T1 + T2 + T3 + T4
C     ITEST=4 - CALCULATE TEMPERATURE AT Z=0 FOR SOURCES AND LEADS AT
C     Z=T1,    ISOTHERMAL TA AT Z=T1 + T2 + T3 + T4
C     ITEST=5 - CALCULATE TEMPERATURE AT Z=T1 FOR SOURCES AND LEADS AT
C     Z=T1,  NEWTON'S LAW COOLING AT Z=T1 + T2 + T3 + T4
C     ITEST=6 - CALCULATE TEMPERATURE AT Z=T1 FOR SOURCES AND LEADS AT
C     Z=T1,    ISOTHERMAL TA AT Z=T1 + T2 + T3 + T4
C     MODE=0 FOR ISOTROPIC K IN ALL LAYERS
C     MODE=1 FOR NON-ISOTROPIC K IN ANY LAYER
	READ (1, *) ITEST,MODE
C     LIMITS TO FOURIER SERIES, TERMINATION TEST CONSTANTS
	READ (1, *) LMAX,MMAX
C     SUBSTRATE DIMENSIONS
	READ (1, *) A,B,T1,T2,T3,T4
C     PHYSICAL CONSTANTS
C     FOR ISOTHERMAL (ITEST = 2, 4, 6), H2 CAN BE ANYTHING
	READ (1, *) H1,H2,TA
C     K1, K2, K3, K4 ARE Z-DIRECTION COMPONENTS
C     K1X, K2X, K3X, K4X ARE X-DIRECTION COMPONENTS
C     K1Y, K2Y, K3Y, K4Y ARE Y-DIRECTION COMPONENTS
C     IF K ISOTROPIC IN ALL LAYERS, NEED TO READ IN ONLY K1, K2, K3, K4
	IF (MODE .EQ. 0) GO TO 20
	READ (1, *) K1X,K1Y,K1
	READ (1, *) K2X,K2Y,K2
	READ (1, *) K3X,K3Y,K3
	READ (1, *) K4X,K4Y,K4
	GO TO 30
20    READ (1, *) K1,K2,K3,K4
C     NUMBER OF SOURCES, NUMBER OF LEADS AT Z=0,
C     NO. OF LEADS AT Z=C4
30    READ (1, *) NS,NL1,NL2
C     SOURCE LOCATIONS AND STRENTHS
C     UNROTATED SOURCES     - X AND Y ARE MINIMUM VALUES
C     IN ALL CASES, DX AND DY ARE THE LITERAL SOURCE DIMENSIONS
	READ (1, *) (XS(I),DXS(I),YS(I),DYS(I),Q(I),I=1,NS)
C     FOR EVERY REQUIRED CALC.,INPUT A LOC(I)=I, OTHERWISE SET LOC (I)=0
	READ (1, *) (LOC(I),I=1,NS)
C     CHECK FOR SUBSTRATE LEADS
	NL = NL1 + NL2
	IF (NL .EQ. 0) GO TO 40
C     IF NL=0, THIS DATA CAN BE ANYTHING
C     LEAD LOCATIONS, THERMAL RESISTANCES, SINK TEMPERATURES
C     FIRST NL1 LEADS AT Z=0, LAST NL2 LEADS AT Z=C4
	READ (1, *) (XL(I),DXL(I),YL(I),DYL(I),R(I),T0(I),I=1,NL)
C     CALCULATION OF INTERMEDIATE VARIABLES
40    AP = PI / A
	BP = PI / B
	K21 = K2 / K1
	K32 = K3 / K2
	K43 = K4 / K3
	K12 = K1 / K2
	K23 = K2 / K3
	K34 = K3 / K4
	H1K1 = H1 / K1
	H2K4 = H2 / K4
C     CALCULATION OF INTERMEDIATE K-VARIABLES
	IF (MODE .EQ. 0) GO TO 50
	KFX1 = K1X / K1
	KFX2 = K2X / K2
	KFX3 = K3X / K3
	KFX4 = K4X / K4
	KFY1 = K1Y / K1
	KFY2 = K2Y / K2
	KFY3 = K3Y / K3
	KFY4 = K4Y / K4
	GO TO 60
50    KFX1 = 1.0
	KFX2 = 1.0
	KFX3 = 1.0
	KFX4 = 1.0
	KFY1 = 1.0
	KFY2 = 1.0
	KFY3 = 1.0
	KFY4 = 1.0
60    DO 70 I = 1, NS
	X2S(I) = XS(I) + DXS(I)
	Y2S(I) = YS(I) + DYS(I)
	XSC(I) = XS(I) + 0.5 * DXS(I)
	YSC(I) = YS(I) + 0.5 * DYS(I)
70    CONTINUE
	IF (ITEST .LT. 10) GO TO 80
	ITEST2 = ITEST
	ITEST = ITEST - 10
80    GO TO (90,130,170,210,170,210),ITEST
C     CALC. OF CASE I SERIES COEFFICIENTS AND TERM0
C     CALC. OF AL(L)
90    DO 100 L = 2, LMAX
	RL = L
	GL1 = GAML(RL,KFX1)
	GL2 = GAML(RL,KFX2)
	GL3 = GAML(RL,KFX3)
	GL4 = GAML(RL,KFX4)
	TH1 = TANH(T1 * GL1)
	TH2 = TANH(T2 * GL2)
	TH3 = TANH(T3 * GL3)
	TH4 = TANH(T4 * GL4)
	CH1 = COSH(T1 * GL1)
	CH2 = COSH(T2 * GL2)
	CH3 = COSH(T3 * GL3)
	CH4 = COSH(T4 * GL4)
	RS = RSCL(RL)
	RC = RCSL(RL)
	UD = UL(RL)
	VD = VL(RL)
	G32 = K32 * GL3 / GL2
	G21 = K21 * GL2 / GL1
	ADENOM = UD * (RS + G32 * RC * TH2) + G21 * VD * (RS * TH2
     1     + G32 * RC)
	AL(L) = (G21 * TH1 * (RS * TH2 + G32 * RC) + (RS
     1     + G32 * RC * TH2)) / (ADENOM * K1 * GL1)
	IF (NL2 .EQ. 0) GO TO 100
	G23 = K23 * GL2 / GL3
	G12 = K12 * GL1 / GL2
	G34 = K34 * GL3 / GL4
	R4 = R4L (RL)
	S4 = S4L (RL)
	AIDENO = G34 * (R4 * ((G12 * UD * TH2 + VD) + G23 * (G12 * UD
     1     + VD * TH2) * TH3) + S4 * ((G12 * UD * TH2 + VD) * TH3
     2     + G23 * (G12 * UD + VD * TH2)))
	AIL(L) = (G34 * TH4 * ((G12 * UD * TH2 + VD) * TH3
     1     + G23 * (G12 * UD + VD * TH2)) + ((G12 * UD * TH2 + VD)
     2     + G23 * (G12 * UD + VD * TH2) * TH3)) / (AIDENO * K4 * GL4)
	BL(L) = 1.0 / (ADENOM * CH1 * CH2 * CH3 * CH4 * K1 * GL1)
	BIL(L) = 1.0 / (AIDENO * CH1 * CH2 * CH3 * CH4 * K4 * GL4)
100   CONTINUE
C     CALC. OF AM(M)
	DO 110 M = 2, MMAX
	RM = M
	GM1 = GAMM (RM, KFY1)
	GM2 = GAMM (RM, KFY2)
	GM3 = GAMM (RM, KFY3)
	GM4 = GAMM (RM, KFY4)
	TH1 = TANH (T1 * GM1)
	TH2 = TANH (T2 * GM2)
	TH3 = TANH (T3 * GM3)
	TH4 = TANH (T4 * GM4)
	CH1 = COSH (T1 * GM1)
	CH2 = COSH (T2 * GM2)
	CH3 = COSH (T3 * GM3)
	CH4 = COSH (T4 * GM4)
	RS = RSCM (RM)
	RC = RCSM (RM)
	UD = UM (RM)
	VD = VM (RM)
	G32 = K32 * GM3 / GM2
	G21 = K21 * GM2 / GM1
	ADENOM = UD * (RS + G32 * RC * TH2) + G21 * VD * (RS * TH2
     1       + G32 * RC)
	AM(M) = (G21 * TH1 * (RS * TH2 + G32 * RC) + (RS
     1      + G32 * RC * TH2)) / (ADENOM * K1 * GM1)
	IF (NL2 .EQ. 0) GO TO 110
	G23 = K23 * GM2 / GM3
	G12 = K12 * GM1 / GM2
	G34 = K34 * GM3 / GM4
	R4 = R4M(RM)
	S4 = S4M(RM)
	AIDENO = G34 * (R4 * ((G12 * UD * TH2 + VD) + G23 * (G12 * UD
     1     + VD * TH2) * TH3) + S4 * ((G12 * UD * TH2 + VD) * TH3
     2     + G23 * (G12 * UD + VD * TH2)))
	AIM(M) = (G34 * TH4 * ((G12 * UD * TH2 + VD) * TH3
     1     + G23 * (G12 * UD + VD * TH2)) + ((G12 * UD * TH2 + VD)
     2     + G23 * (G12 * UD + VD * TH2) * TH3)) / (AIDENO * K4 * GM4)
	BM(M) = 1.0 / (ADENOM * CH1 * CH2 * CH3 * CH4 * K1 * GM1)
	BIM(M) = 1.0 / (AIDENO * CH1 * CH2 * CH3 * CH4 * K4 * GM4)
110   CONTINUE
C     CALC. OF ALM(L,M)
	DO 120 L = 2,LMAX
	DO 120 M = 2,MMAX
	RL = L
	RM = M
	GLM1 = GAM(RL,RM,KFX1,KFY1)
	GLM2 = GAM(RL,RM,KFX2,KFY2)
	GLM3 = GAM(RL,RM,KFX3,KFY3)
	GLM4 = GAM(RL,RM,KFX4,KFY4)
	TH1 = TANH(T1 * GLM1)
	TH2 = TANH(T2 * GLM2)
	TH3 = TANH(T3 * GLM3)
	TH4 = TANH(T4 * GLM4)
	CH1 = COSH(T1 * GLM1)
	CH2 = COSH(T2 * GLM2)
	CH3 = COSH(T3 * GLM3)
	CH4 = COSH(T4 * GLM4)
	RS = RSC(RL,RM)
	RC = RCS(RL,RM)
	UD = ULM(RL,RM)
	VD = VLM(RL,RM)
	G32 = K32 * GLM3 / GLM2
	G21 = K21 * GLM2 / GLM1
	ADENOM = UD * (RS + G32 * RC * TH2) + G21 * VD * (RS * TH2
     1       + G32 * RC)
	ALM (L,M) = (G21 * TH1 * (RS * TH2 + G32 * RC) + (RS
     1       + G32 * RC * TH2)) / (ADENOM * K1 + GLM1)
	IF (NL2 .EQ. 0) GO TO 120
	G23 = K23 * GLM2 / GLM3
	G12 = K12 * GLM1 / GLM2
	G34 = K34 * GLM3 / GLM4
	R4 = R4LM(RL,RM)
	S4 = S4LM(RL,RM)
	AIDENO = G34 * (R4 * ((G12 * UD * TH2 + VD) + G23 * (G12 * UD
     1     + VD * TH2) * TH3) + S4 * ((G12 * UD * TH2 + VD) * TH3
     2     + G23 * (G12 * UD + VD * TH2)))
	AILM (L,M) = (G34 * TH4 * ((G12 * UD * TH2 + VD) * TH3
     1      + G23 * (G12 * UD + VD * TH2)) + ((G12 * UD * TH2 + VD)
     2      + G23 * (G12 * UD + VD * TH2) * TH3)) / (AIDENO * K4 * GLM4)
	BLM (L,M) = 1.0 / (ADENOM * CH1 * CH2 * CH3 * CH4 * K1 * GLM1)
	BILM (L,M) = 1.0 / (AIDENO * CH1 * CH2 * CH3 * CH4 * K4 * GLM4)
120   CONTINUE
	TERM0 = (T1 + T2 / K21 + T3 * K1 / K3 + T4 * K1 / K4 + K1 / H2)
     1      / (H1 * (T1 + T2 / K21 + T3 * K1 / K3 + T4 * K1 / K4 + K1
     2      / H1 + K1 / H2))
	IF (NL2 .EQ. 0) GO TO 250
	TRM0AI = (T4 + K43 * T3 + K4 * T2 / K2 + K4 * T1 / K1 + K4
     1      / H1) / (H2 * (T4 + K43 * T3 + K4 * T2 / K2 + K4 * T1 / K1
     2      + K4 / H2 + K4 / H1))
	TRM0B = K1 / ((T1 + K12 * T2 + K1 * T3 / K3 + K1 * T4 / K4 + K1
     1      / H1 + K1 / H2) * H1 * H2)
	TRM0BI = K4 / ((T4 + K43 * T3 + K4 * T2 / K2 + K4 * T1 / K1
     1      + K4 / H2 + K4 / H1) * H1 * H2)
	GO TO 250
C     CALC. OF CASE 2 SERIES COEFFICIENTS
C     CALC. OF AL(L)
130   DO 140 L = 2,LMAX
	RL = L
	GL1 = GAML(RL,KFX1)
	GL2 = GAML(RL,KFX2)
	GL3 = GAML(RL,KFX3)
	GL4 = GAML(RL,KFX4)
	TH1 = TANH(T1 * GL1)
	TH2 = TANH(T2 * GL2)
	TH3 = TANH(T3 * GL3)
	TH4 = TANH(T4 * GL4)
	UD = UL(RL)
	VD = VL(RL)
	G32 = K32 * GL3 / GL2
	G21 = K21 * GL2 / GL1
	G43 = K43 * GL4 / GL3
	AL(L) = (G21 * TH1 * ((G43 * TH3 + TH4) * TH2 + G32 * (G43
     1      + TH4 * TH3)) + ((G43 * TH3 + TH4) + G32 * (G43
     2      + TH4 * TH3) * TH2)) / ((UD * ((G43 * TH3 + TH4)
     3      + G32 * (G43 + TH4 * TH3) * TH2) + G21 * VD * ((G43 * TH3
     4      + TH4) * TH2 + G32 * (G43 + TH4 * TH3))) * K1 * GL1)
140   CONTINUE
C     CALC. OF AM(M)
	DO 150 M = 2, MMAX
	RM = M
	GM1 = GAMM(RM,KFY1)
	GM2 = GAMM(RM,KFY2)
	GM3 = GAMM(RM,KFY3)
	GM4 = GAMM(RM,KFY4)
	TH1 = TANH(T1 * GM1)
	TH2 = TANH(T2 * GM2)
	TH3 = TANH(T3 * GM3)
	TH4 = TANH(T4 * GM4)
	UD = UM(RM)
	VD = VM(RM)
	G32 = K32 * GM3 / GM2
	G21 = K21 * GM2 / GM1
	G43 = K43 * GM4 / GM3
	AM(M) = (G21 * TH1 * ((G43 * TH3 + TH4) * TH2 + G32 * (G43
     1       + TH4 * TH3)) + ((G43 * TH3 + TH4) + G32 * (G43
     2       + TH4 * TH3) * TH2)) / ((UD * ((G43 * TH3 + TH4)
     3       + G32 * (G43 + TH4 * TH3) * TH2) + G21 * VD * ((G32 * TH3
     4       + TH4) * TH2 + G32 * (G43 + TH4 * TH3))) * K1 * GM1)
150   CONTINUE
C     CALC. OF ALM(L,M)
	DO 160 L = 2,LMAX
	DO 160 M = 2,MMAX
	RL = L
	RM = M
	GLM1 = GAM(RL,RM,KFX1,KFY1)
	GLM2 = GAM(RL,RM,KFX2,KFY2)
	GLM3 = GAM(RL,RM,KFX3,KFY3)
	GLM4 = GAM(RL,RM,KFX4,KFY4)
	TH1 = TANH(T1 * GLM1)
	TH2 = TANH(T2 * GLM2)
	TH3 = TANH(T3 * GLM3)
	TH4 = TANH(T4 * GLM4)
	UD = ULM(RL,RM)
	VD = VLM(RL,RM)
	G32 = K32 * GLM3 / GLM2
	G21 = K21 * GLM2 / GLM1
	G43 = K43 * GLM4 / GLM3
	ALM(L,M) = (G21 * TH1 * ((G43 * TH3 + TH4) * TH2 + G32 * (G43
     1       + TH4 * TH3)) + ((G43 * TH3 + TH4) + G32 * (G43
     2       + TH4 * TH3) * TH2)) / ((UD * ((G43 * TH3 + TH4)
     3       + G32 * (G43 + TH4 * TH3) * TH2) + G21 * VD * ((G43 * TH3
     4       + TH4) * TH2 + G32 * (G43 + TH4 * TH3))) * K1 * GLM1)
160   CONTINUE
	TERM0 = (T1 + T2 / K21 + T3 * K1 / K3 + T4 * K1 / K4)
     1      / (H1 * (T1 + T2 / K21 + T3 * K1 / K3 + T4 * K1 / K4 + K1
     2      / H1))
	GO TO 250
C     CALC. OF CASES 3 AND 5 SERIES COEFFICIENTS FOR T CALC. AT Z=C1
C     CALC. OF AL(L)
170   DO 180 L = 2, LMAX
	RL = L
	GL1 = GAML(RL,KFX1)
	GL2 = GAML(RL,KFX2)
	GL3 = GAML(RL,KFX3)
	GL4 = GAML(RL,KFX4)
	TH1 = TANH(T1 * GL1)
	TH2 = TANH(T2 * GL2)
	TH3 = TANH(T3 * GL3)
	TH4 = TANH(T4 * GL4)
	RS = RSCL(RL)
	RC = RCSL(RL)
	UD = UL(RL)
	VD = VL(RL)
	G32 = K32 * GL3 / GL2
	G21 = K21 * GL2 / GL1
	AL(L) = VD * (RS + G32 * RC * TH2) / ((UD * (RS
     1      + G32 * RC * TH2) + G21 * VD * (RS * TH2
     2      + G32 * RC)) * K1 * GL1)
180   CONTINUE
C     CALC. OF AM(M)
	DO 190 M = 2, MMAX
	RM = M
	GM1 = GAMM(RM,KFY1)
	GM2 = GAMM(RM,KFY2)
	GM3 = GAMM(RM,KFY3)
	GM4 = GAMM(RM,KFY4)
	TH1 = TANH(T1 * GM1)
	TH2 = TANH(T2 * GM2)
	TH3 = TANH(T3 * GM3)
	TH4 = TANH(T4 * GM4)
	RS = RSCM(RM)
	RC = RCSM(RM)
	UD = UM(RM)
	VD = VM(RM)
	G32 = K32 * GM3 / GM2
	G21 = K21 * GM2 / GM1
	AM(M) = VD * (RS + G32 * RC * TH2) / ((UD * (RS
     1     + G32 * RC * TH2) + G21 * VD * (RS * TH2
     2     + G32 * RC)) * K1 * GM1)
190   CONTINUE
C     CALC. OF ALM(L,M)
	DO 200 L = 2, LMAX
	DO 200 M = 2, MMAX
	RL = L
	RM = M
	GLM1 = GAM(RL,RM,KFX1,KFY1)
	GLM2 = GAM(RL,RM,KFX2,KFY2)
	GLM3 = GAM(RL,RM,KFX3,KFY3)
	GLM4 = GAM(RL,RM,KFX4,KFY4)
	TH1 = TANH(T1 * GLM1)
	TH2 = TANH(T2 * GLM2)
	TH3 = TANH(T3 * GLM3)
	TH4 = TANH(T4 * GLM4)
	RS = RSC(RL,RM)
	RC = RCS(RL,RM)
	UD = ULM(RL,RM)
	VD = VLM(RL,RM)
	G32 = K32 * GLM3 / GLM2
	G21 = K21 * GLM2 / GLM1
	ALM(L,M) = VD * (RS + G32 * RC * TH2) / ((UD * (RS
     1      + G32 * RC * TH2) + G21 * VD * (RS * TH2
     2      + G32 * RC)) * K1 * GLM1)
200   CONTINUE
	TERM0 = (T2 / K2 + T3 / K3 + T4 / K4 + 1.0 / H2) * (T1 + K1
     1      / H1) / (T1 + T2 / K21 + T3 * K1 / K3 + T4 * K1 / K4 + K1
     2      / H1 + K1 / H2)
	GO TO 250
C     CALC. OF CASES 4 AND 6 SERIES COEFFICIENTS FOR T CALC. AT Z=C1
C     CALC. OF AL(L)
210   DO 220 L = 2, LMAX
	RL = L
	GL1 = GAML(RL,KFX1)
	GL2 = GAML(RL,KFX2)
	GL3 = GAML(RL,KFX3)
	GL4 = GAML(RL,KFX4)
	TH1 = TANH(T1 * GL1)
	TH2 = TANH(T2 * GL2)
	TH3 = TANH(T3 * GL3)
	TH4 = TANH(T4 * GL4)
	UD = UL(RL)
	VD = VL(RL)
	G43 = K43 * GL4 / GL3
	G32 = K32 * GL3 / GL2
	G21 = K21 * GL2 / GL1
	AL(L) = VD * ((G43 * TH3 + TH4) + G32 * (G43
     1      + TH4 * TH3) * TH2) / ((UD * ((G43 * TH3 + TH4)
     2      + G32 * (G43 + TH4 * TH3) * TH2) + G21 * VD * ((G43 * TH3
     3      + TH4) * TH2 + G32 * (G43 + TH4 * TH3))) * K1 * GL1)
220   CONTINUE
C     CALC. OF AM(M)
	DO 230 M = 2, MMAX
	RM = M
	GM1 = GAMM(RM,KFY1)
	GM2 = GAMM(RM,KFY2)
	GM3 = GAMM(RM,KFY3)
	GM4 = GAMM(RM,KFY4)
	TH1 = TANH(T1 * GM1)
	TH2 = TANH(T2 * GM2)
	TH3 = TANH(T3 * GM3)
	TH4 = TANH(T4 * GM4)
	UD = UM(RM)
	VD = VM(RM)
	G43 = K43 * GM4 / GM3
	G32 = K32 * GM3 / GM2
	G21 = K21 * GM2 / GM1
	AM(M) = VD * ((G43 * TH3 + TH4) + G32 * (G43
     1      + TH4 * TH3) * TH2) / ((UD * ((G43 * TH3 + TH4)
     2      + G32 * (G43 + TH4 * TH3) * TH2) + G21 * VD * ((G43 * TH3
     3      + TH4) * TH2 + G32 * (G43 + TH4 * TH3))) * K1 * GM1)
230   CONTINUE
C     CALC. OF ALM(L,M)
	DO 240 L = 2, LMAX
	DO 240 M = 2, MMAX
	RL = L
	RM = M
	GLM1 = GAM(RL,RM,KFX1,KFY1)
	GLM2 = GAM(RL,RM,KFX2,KFY2)
	GLM3 = GAM(RL,RM,KFX3,KFY3)
	GLM4 = GAM(RL,RM,KFX4,KFY4)
	TH1 = TANH(T1 * GLM1)
	TH2 = TANH(T2 * GLM2)
	TH3 = TANH(T3 * GLM3)
	TH4 = TANH(T4 * GLM4)
	UD = ULM(RL,RM)
	VD = VLM(RL,RM)
	G43 = K43 * GLM4 / GLM3
	G32 = K32 * GLM3 / GLM2
	G21 = K21 * GLM2 / GLM1
	ALM(L,M) = VD * ((G43 * TH3 + TH4) + G32 * (G43
     1      + TH4 * TH3) * TH2) / ((UD * ((G43 * TH3 + TH4)
     2      + G32 * (G43 + TH4 * TH3) * TH2) + G21 * VD * ((G43 * TH3
     3      + TH4) * TH2 + G32 * (G43 + TH4 * TH3))) * K1 * GLM1)
240   CONTINUE
	TERM0 = (T2 / K21 + T3 * K1 / K3 + T4 * K1 / K4) * (T1 / K1
     1      + 1.0 / H1) / (T1 + T2 / K21 + T3 * K1 / K3 + T4 * K1 / K4
     2      + K1 / H1)
C     CHECK TO SEE IF MATRIX CALC. MAY BE BYPASSED
250   IF (NL .EQ. 0) GO TO 420
C     CALC. OF COEFFICIENT MATRIX
C     CALC. OF LOCATIONS OF UNIT TEMP CALC.
	DO 260 I = 1, NL
	X2L(I) = XL(I) + DXL(I)
	Y2L(I) = YL(I) + DYL(I)
	XLC(I) = XL(I) + 0.5 * DXL(I)
260   YLC(I) = YL(I) + 0.5 * DYL(I)
C     CALC. OF TEMP AT LEADS DUE TO UNIT FLUX AT LEADS
	DO 340 I = 1,NL
	DO 340 J = 1,NL
	INLTS = I - NL1
	JNLTS = J - NL1
	IF (INLTS) 270, 270, 300
270   IF (JNLTS) 280, 280, 290
C     TEMP AT Z=0 DUE TO LEAD AT Z=0
280   CALL SST (A,B,AP,BP,XL(J),X2L(J),YL(J),Y2L(J),XLC(I),YLC(I),TERM0,
     1AL,AM,ALM,LMAX,MMAX,C(I,J))
	GO TO 330
C     TEMP AT Z=0 DUE TO LEAD AT Z=C4
290   CALL SST (A,B,AP,BP,XL(J),X2L(J),YL(J),Y2L(J),XLC(I),YLC(I),TRM0B,
     1BL,BM,BLM,LMAX,MMAX,C(I,J))
	GO TO 330
300   IF (JNLTS) 310, 310, 320
C     TEMP AT Z=C4 DUE TO LEAD AT Z=0
310   CALL SST (A,B,AP,BP,XL(J),X2L(J),YL(J),Y2L(J),XLC(I),YLC(I),
     1      TRM0BI,BIL,BIM,BILM,LMAX,MMAX,C(I,J))
	GO TO 330
C     TEMP AT Z=C4 DUE TO LEAD AT Z=C4
320   CALL SST (A,B,AP,BP,XL(J),X2L(J),YL(J),Y2L(J),XLC(I),YLC(I),
     1      TRM0AI,AIL,AIM,AILM,LMAX,MMAX,C(I,J))
330   IF (I .NE. J) GO TO 340
	C(I,J) = C(I,J) + R(I)
340   CONTINUE
C     CALC. OF TEMPS AT LEADS DUE TO SOURCES Q
	DO 390 I = 1, NL
	SW1 (I) = 0.0
	INLTS = I - NL1
	DO 380 J = 1, NS
	IF (Q(J) .EQ. 0.0) GO TO 380
	IF (INLTS) 350, 350, 360
C     TEMP AT Z=0 DUE TO SOURCE AT Z=0
350   CALL SST (A,B,AP,BP,XS(J),X2S(J),YS(J),Y2S(J),XLC(I),YLC(I),TERM0,
     1AL,AM,ALM,LMAX,MMAX,W1)
	GO TO 370
C     TEMP AT Z=C4 DUE TO SOURCE AT Z=0
360   CALL SST (A,B,AP,BP,XS(J),X2S(J),YS(J),Y2S(J),XLC(I),YLC(I),
     1      TRM0BI,BIL,BIM,BILM,LMAX,MMAX,W1)
370   W1 = W1 * Q(J)
	SW1(I) = SW1(I) + W1
	C(I,NL + 1) = SW1(I) + TA - T0(I)
380   CONTINUE
390   CONTINUE
	VV(1) = 4.0
	LLTEST = 0
	CALL GER (C,21,20,NL,NL + 1,LLTEST,JC,VV)
	IF (LLTEST .NE. 1) GO TO 400
	WRITE (2,720)
	STOP
C     NAMING OF LEAD FLUX FROM MATRIX SOLIN OUTPUT
400   DO 410 I = 1,NL
410   F(I) = C(I,NL + 1)
C     CALCULATION OF TEMP. AT SELECTED SOURCES DUE TO SOURCES ONLY 
C            (TEMPS  TEST TO CHECK IF NEW SERIES COEF. NEED TO BE
C     CALC. (FOR CASES 3 AND 4 ONLY)
420   GO TO (510,510,430,470,510,510),ITEST
C     NEW SERIES COEFF. FOR CASE 3
C     CALC. OF AL(L)
430   DO 440 L = 2, LMAX
	RL = L
	GL1 = GAML(RL,KFX1)
	GL2 = GAML(RL,KFX2)
	GL3 = GAML(RL,KFX3)
	GL4 = GAML(RL,KFX4)
	TH1 = TANH(T1 * GL1)
	TH2 = TANH(T2 * GL2)
	TH3 = TANH(T3 * GL3)
	TH4 = TANH(T4 * GL4)
	CH1 = COSH(T1 * GL1)
	RS = RSCL(RL)
	RC = RCSL(RL)
	UD = UL(RL)
	VD = VL(RL)
	G32 = K32 * GL3 / GL2
	G21 = K21 * GL2 / GL1
	AL(L) = (RS + G32 * RC * TH2) / ((UD * (RS + G32 * RC * TH2)
     1      + G21 * VD * (RS * TH2 + G32 * RC)) * K1 * CH1 * GL1)
440   CONTINUE
C     CALC. OF AM(M)
	DO 450 M = 2,MMAX
	RM = M
	GM1 = GAMM(RM,KFY1)
	GM2 = GAMM(RM,KFY2)
	GM3 = GAMM(RM,KFY3)
	GM4 = GAMM(RM,KFY4)
	TH1 = TANH(T1 * GM1)
	TH2 = TANH(T2 * GM2)
	TH3 = TANH(T3 * GM3)
	TH4 = TANH(T4 * GM4)
	CH1 = COSH(T1 * GM1)
	RC = RCSM(RM)
	VD = VM(RM)
	RS = RSCM(RM)
	UD = UM(RM)
	G32 = K32 * GM3 / GM2
	G21 = K21 * GM2 / GM1
	AM(M) = (RS + G32 * RC * TH2) / ((UD * (RS + G32 * RC * TH2)
     1      + G21 * VD * (RS * TH2 + G32 * RC)) * K1 * CH1 * GM1)
450   CONTINUE
C     CALC. OF ALM (L,M)
	DO 460 L = 2,LMAX
	DO 460 M = 2,MMAX
	RL = L
	RM = M
	GLM1 = GAM(RL,RM,KFX1,KFY1)
	GLM2 = GAM(RL,RM,KFX2,KFY2)
	GLM3 = GAM(RL,RM,KFX3,KFY3)
	GLM4 = GAM(RL,RM,KFX4,KFY4)
	TH1 = TANH(T1 * GLM1)
	TH2 = TANH(T2 * GLM2)
	TH3 = TANH(T3 * GLM3)
	TH4 = TANH(T4 * GLM4)
	CH1 = COSH(T1 * GLM1)
	RS = RSC(RL,RM)
	RC = RCS(RL,RM)
	VD = VLM(RL,RM)
	UD = ULM(RL,RM)
	G32 = K32 * GLM3 / GLM2
	G21 = K21 * GLM2 / GLM1
	ALM(L,M) = (RS + G32 * RC * TH2) / ((UD * (RS + G32 * RC * TH2)
     1      + G21 * VD * (RS * TH2 + G32 * RC)) * K1 * CH1 * GLM1)
460   CONTINUE
	TERM0 = (T2 / K21 + T3 * K1 / K3 + T4 * K1 / K4 + K1 / H2)
     1      / (H1 * (T1 + T2 / K21 + T3 * K1 / K3 + T4 * K1 / K4 + K1
     2      / H1 + K1 / H2))
	GO TO 510
C     NEW SERIES COEFFICIENTS FOR CASE 4
C     CALC. OF AL(L)
470   DO 480 L = 2, LMAX
	RL = L
	GL1 = GAML(RL,KFX1)
	GL2 = GAML(RL,KFX2)
	GL3 = GAML(RL,KFX3)
	GL4 = GAML(RL,KFX4)
	TH1 = TANH(T1 * GL1)
	TH2 = TANH(T2 * GL2)
	TH3 = TANH(T3 * GL3)
	TH4 = TANH(T4 * GL4)
	CH1 = COSH(T1 * GL1)
	UD = UL(RL)
	VD = VL(RL)
	G43 = K43 * GL4 / GL3
	G32 = K32 * GL3 / GL2
	G21 = K21 * GL2 / GL1
	AL(L) = ((G43 * TH3 + TH4) + G32 * (G43 + TH4 * TH3) * TH2)
     1      / ((UD * ((G43 * TH3 + TH4) + G32 * (G43
     2      + TH4 * TH3) * TH2) + G21 * VD * ((G43 * TH3 + TH4) * TH2
     3      + G32 * (G43 + TH4 * TH3))) * K1 * CH1 * GL1)
480   CONTINUE
C     CALC. OF AM(M)
	DO 490 M = 2, MMAX
	RM = M
	GM1 = GAMM(RM,KFY1)
	GM2 = GAMM(RM,KFY2)
	GM3 = GAMM(RM,KFY3)
	GM4 = GAMM(RM,KFY4)
	TH1 = TANH(T1 * GM1)
	TH2 = TANH(T2 * GM2)
	TH3 = TANH(T3 * GM3)
	TH4 = TANH(T4 * GM4)
	CH1 = COSH(T1 * GM1)
	UD = UM(RM)
	VD = VM(RM)
	G43 = K43 * GM4 / GM3
	G32 = K32 * GM3 / GM2
	G21 = K21 * GM2 / GM1
	AM(M) = ((G43 * TH3 + TH4) + G32 * (G43 + TH4 * TH3) * TH2)
     1      / ((UD * ((G43 * TH3 + TH4) + G32 * (G43
     2      + TH4 * TH3) * TH2) + G21 * VD * ((G43 * TH3 + TH4) * TH2
     3      + G32 * (G43 + TH4 * TH3))) * K1 * CH1 * GM1)
490   CONTINUE
C     CALC. OF ALM (L,M)
	DO 500 L = 2,LMAX
	DO 500 M = 2,MMAX
	RL = L
	RM = M
	GLM1 = GAM(RL,RM,KFX1,KFY1)
	GLM2 = GAM(RL,RM,KFX2,KFY2)
	GLM3 = GAM(RL,RM,KFX3,KFY3)
	GLM4 = GAM(RL,RM,KFX4,KFY4)
	TH1 = TANH(T1 * GLM1)
	TH2 = TANH(T2 * GLM2)
	TH3 = TANH(T3 * GLM3)
	TH4 = TANH(T4 * GLM4)
	CH1 = COSH(T1 * GLM1)
	UD = ULM(RL,RM)
	VD = VLM(RL,RM)
	G43 = K43 * GLM4 / GLM3
	G32 = K32 * GLM3 / GLM2
	G21 = K21 * GLM2 / GLM1
	ALM(L,M) = ((G43 * TH3 + TH4) + G32 * (G43 + TH4 * TH3) * TH2)
     1      / ((UD * ((G43 * TH3 + TH4) + G32 * (G43
     2      + TH4 * TH3) * TH2) + G21 * VD * ((G43 * TH3 + TH4) * TH2
     3      + G32 * (G43 + TH4 * TH3))) * K1 * CH1 * GLM1)
500   CONTINUE
	TERM0 = (T2 / K21 + T3 * K1 / K3 + T4 * K1 / K4) / ((T1 + T2
     1       / K21 + T3 * K1 / K3 + T4 * K1 / K4 + K1 / H1) * H1)
510   DO 580 I = 1, NS
	J = LOC (I)
	IF (J .EQ. 0) GO TO 580
	TEMPS (J) = 0.0
	TEMPL (J) = 0.0
	DO 530 L = 1, NS
	IF (Q(L) .EQ. 0.0) GO TO 530
	IF (ITEST2 .LT. 11) GO TO 520
	CALL SST2 (A,B,AP,BP,XS(L),X2S(L),YS(L),Y2S(L),XSC(J),YSC(J),
     1      TERM0,AL,AM,ALM,LMAX,MMAX,SPSUM)
	CALL TOUT (Q(L),LMAX,MMAX,SPSUM)
	CALL LPLOT (LMAX,SPSUM)
520   CALL SST (A,B,AP,BP,XS(L),X2S(L),YS(L),Y2S(L),XSC(J),YSC(J),TERM0,
     1AL, AM, ALM, LMAX, MMAX, W2)
	W2 = W2 * Q(L)
	TEMPS (J) = TEMPS (J) + W2
530   CONTINUE
C     CHECK TO SEE IF A LEAD CONTRIBUTION IS NECESSARY
	IF (NL .EQ. 0) GO TO 570
C     LEAD CONTRIBUTION TO TEMP.
	TEMPL (J) = 0.0
C     LOC COORD. FOR TEMP CALC. ALREADY DETERMINED
	DO 560 L = 1,NL
	LNLTS = L - NL1
	IF (LNLTS .GT. 0) GO TO 540
C     TEMP AT Z=0 DUE TO LEAD AT Z=0
	CALL SST (A,B,AP,BP,XL(L),X2L(L),YL(L),Y2L(L),XSC(J),YSC(J),
     1TERM0,AL,AM,ALM,LMAX,MMAX,W3)
	GO TO 550
C     TEMP AT Z=0 DUE TO LEAD AT Z=C4
540   CALL SST (A,B,AP,BP,XL(L),X2L(L),YL(L),Y2L(L),XSC(J),YSC(J),
     1TRM0B,BL,BM,BLM,LMAX,MMAX,W3)
550   W3 = W3 * F(L)
560   TEMPL(J) = TEMPL(J) + W3
570   TEMP(J) = TEMPS(J) - TEMPL(J) + TA
580   CONTINUE
	WRITE (2,770)
	WRITE (2,780) TITLE
	WRITE (2,790)
	GO TO (590,600,610,620,630,640),ITEST
590   WRITE (2,800)
	GO TO 650
600   WRITE (2,810)
	GO TO 650
610   WRITE (2,820)
	GO TO 650
620   WRITE (2,830)
	GO TO 650
630   WRITE (2,840)
	GO TO 650
640   WRITE (2,850)
650   IF (MODE .EQ. 1) GO TO 660
	WRITE (2, 730) A,B,T1,T2,T3,T4,H1,H2,K1,K2,K3,K4,NS,NL,NL1,NL2,
     1 LMAX,MMAX,TA,(I,XS(I),DXS(I),YS(I),DYS(I),Q(I),I=1,NS)
	GO TO 670
660   WRITE (2,740) A,B,T1,T2,T3,T4,H1,H2,K1X,K2X,K3X,K4X,K1Y,K2Y,K3Y,
     1  K4Y,K1,K2,K3,K4,NS,NL,NL1,NL2,LMAX,MMAX,TA,(I,XS(I),DXS(I),
     2  YS(I),DYS(I),Q(I),I=1,NS)
670   IF (NL .EQ. 0) GO TO 690
	WRITE (2,750) (I,XL(I),DXL(I),YL(I),DYL(I),R(I),T0(I),I=1,NL)
	DO 680 I = 1,NL
680   TL(I) = F(I) * R(I) + T0(I)
	WRITE (2,760) (I,F(I),TL(I),I=1,NL)
690   WRITE (2,860)
	DO 700 I = 1,NS
	IF (LOC(I) .EQ. 0) GO TO 700
	TEMPS(I) = TEMPS(I) + TA
	WRITE (2,870) LOC(I), TEMPS(I)
	IF (NL .EQ. 0) GO TO 700
	WRITE (2,880) TEMP(I)
700   CONTINUE
	WRITE (2,770)
	GO TO 881
C
C
710   FORMAT (A80)
711   FORMAT (2I10,2E10.0)
712   FORMAT (6F10.0)
713   FORMAT (2E10.0,F10.0)
714   FORMAT (3E10.0)
715   FORMAT (4E10.0)
716   FORMAT (3I10)
717   FORMAT (5F10.0)
718   FORMAT (8I10)
720   FORMAT (22H MATRIX SOLUTION ERROR)
730   FORMAT (1H ,9X,43HSUBSTRATE DIMENSIONS AND PHYSICAL CONSTANTS/1H ,
     112X,2HA=,F8.5,4X,2HB=,F8.5,4X,3HT1=,F7.5,4X,3HT2=,F7.5,4X,3HT3=,F7
     2.5,4X,3HT4=,F7.5/1H ,12X,3HH1=,E10.4,2X,3HH2=,E10.4/1H ,12X,3HK1=,
     3E10.4,2X,3HK2=,E10.4,2X,3HK3=,E10.4,2X,3HK4=,E10.4//1H ,12X,18HNUM
     4BER OF SOURCES=,I3,2X,15HNUMBER OF RES.=,I3,2X,
     54HNR1=,I3,2X,4HNR2=,I3//1H ,12X,
     65HLMAX=,I4,2X,
     7  5HMMAX=,I4//1H ,12X,3HTA=,F6.1,1X//1
     8H ,12X,11HSOURCE DATA/1H ,12X,12HSOURCE NO. I,6X,5HXS(I),9X,6HDXS(
     9I),10X,5HYS(I),9X,6HDYS(I),16X,4HQ(I)              /(1H0,15X,I3,2X
     $,4F15.4,14X,F7.3         ))
740   FORMAT (1H ,9X,43HSUBSTRATE DIMENSIONS AND PHYSICAL CONSTANTS/1H ,
     112X,2HA=,F8.5,4X,2HB=,F8.5,4X,3HT1=,F7.5,4X,3HT2=,F7.5,4X,3HT3=,F7
     2.5,4X,3HT4=,F7.5/1H ,12X,3HH1=,E11.4,2X,3HH2=,E11.4/1H ,12X,4HK1X=
     3,E10.4,2X,4HK2X=,E10.4,2X,4HK3X=,E10.4,2X,4HK4X=,E10.4/1H ,12X,4HK
     41Y=,E10.4,2X,4HK2Y=,E10.4,2X,4HK3Y=,E10.4,2X,4HK4Y=,E10.4/1H ,12X,
     54HK1Z=,E10.4,2X,4HK2Z=,E10.4,2X,4HK3Z=,E10.4,2X,4HK4Z=,E10.4//1H ,
     612X,18HNUMBER OF SOURCES=,I3,2X,15HNUMBER OF RES.=,I3,2X,
     74HNR1=,I3,2X,4HNR2=,I3//1H ,12X,                                5H
     8LMAX=,I4,2X,5HMMAX=,I4//1H ,12X, 3HTA=,
     9F6.1,1X//1H ,12X,11HSOURCE DATA/1H ,12X,12HSOURCE NO. I,6X,5HXS(I)
     $,9X,6HDXS(I),10X,5HYS(I),9X,6HDYS(I),16X,4HQ(I)              /(1H0
     $,15X,I3,2X,4F15.4,14X,F7.3         ))
750   FORMAT (1H0,12X,9HRES. DATA/1H ,12X,10HRES. NO. I,8X,5HXR(I),9X,6H
     1DXR(I),10X,5HYR(I),9X,6HDYR(I),15X,4HR(I),12X,5HT0(I)/(1H0,15X,I3,
     22X,4F15.4,8X,E12.3,11X,F5.1))
760   FORMAT (1H0,12X,69HTHERMAL FLUX IN RES. AND TEMPERATURES CALCULAT
     1ED AT RES. PAD CENTERS/1H ,12X,10HRES. NO. I,10X,4HF(I),9X,
     25HTR(I)/(1H0,15X,I3,9X,E11.3,5X,F7.1))
770   FORMAT (1H1)
780   FORMAT (A80)
790   FORMAT (1H ,9X,46HTAMSIV-THERMAL ANALYZER FOR MULTILAYER SYSTEMS,
     1/,10X,21HAUG. 10, 1983 VERSION/)
800   FORMAT (1H ,9X,55HTHERMAL ANALYSIS FOR NEWTON'S LAW COOLING AT Z=0
     1 AND C4/1H ,9X,24HSOURCES AND LEADS AT Z=0//)
810   FORMAT (1H ,9X,85HTHERMAL ANALYSIS FOR NEWTON'S LAW COOLING AT Z=0
     1 AND AN ISOTHERMAL SURFACE TA AT Z=C4/1H ,9X,24HSOURCES &  LEADS
     2AT Z=0//)
820   FORMAT (1H ,9X,55HTHERMAL ANALYSIS FOR NEWTON'S LAW COOLING AT Z=0
     1 AND C4/1H ,9X,60HSOURCES AND LEADS AT Z=C1, BUT TEMPERATURE CALCU 
     2LATED AT Z=0//)
830   FORMAT (1H ,9X,85HTHERMAL ANALYSIS FOR NEWTON'S LAW COOLING AT Z=0 
     1 AND AN ISOTHERMAL SURFACE TA AT Z=C4/1H ,9X,60HSOURCES AND LEADS
     2AT Z=C1, BUT TEMPERATURE CALCULATED AT Z=0//)
840   FORMAT (1H ,9X,55HTHERMAL ANALYSIS FOR NEWTON'S LAW COOLING AT Z=0
     1 AND C4/1H ,9X,25HSOURCES AND LEADS AT Z=C1,//)
850   FORMAT (1H ,9X,85HTHERMAL ANALYSIS FOR NEWTON'S LAW COOLING AT Z=0
     1 AND AN ISOTHERMAL SURFACE TA AT Z=C4/1H ,9X,25HSOURCES AND LEADS
     2AT Z=C1,//)
860   FORMAT(1H0,12X,41HTEMPERATURES CALCULATED AT SOURCE CENTERS/1H ,12
     1X,12HSOURCE NO. I, 12X,23HTS(I) WITH SOURCES ONLY,9X,28HTS(I) WITH
     2SOURCES AND RES.  )
870   FORMAT (1H0,I18,21X,F7.1)
880   FORMAT (1H+,70X,F7.1)
881	STOP
	END
	SUBROUTINE SST (A,B,AP,BP,X1,X2,Y1,Y2,X,Y,TERM0,AL,AM,ALM,LMAX,MMA
     1X, UNTMP)
	DIMENSION AL(70), AM(70), ALM(70,70)
C     FUNCTION DEFINITIONS
	DELL(V) = 2.0 * (SIN(AP * X2 * (V - 1.0)) - SIN(AP * X1 * (V
     1      - 1.0))) / (AP * (X2 - X1) * (V - 1.0))
	DELM(V) = 2.0 * (SIN(BP * Y2 * (V - 1.0)) - SIN(BP * Y1 * (V
     1      - 1.0))) / (BP * (Y2 - Y1) * (V - 1.0))
	SUM = 0.0
	DO 50 L = 1, LMAX
	DO 40 M = 1, MMAX
	IF (L .EQ. 1 .AND. M .EQ. 1) GO TO 40
	IF (L .EQ. 1) GO TO 20
	IF (M .EQ. 1) GO TO 10
	RL = L
	RM = M
	ANS = ALM(L,M) * DELL(RL) * DELM(RM) * COS(BP * Y * (RM
     1      - 1.0)) * COS(AP * X * (RL - 1.0))
	GO TO 30
10    RL = L
	RM = M
	ANS = AL(L) * DELL(RL) * COS(AP * X * (RL - 1.0))
	GO TO 30
20    RL = L
	RM = M
	ANS = AM(M) * DELM(RM) * COS(BP * Y * (RM - 1.0))
30    SUM = SUM + ANS
40    CONTINUE
50    CONTINUE
	UNTMP = (TERM0 + SUM) / (A * B)
	RETURN
	END
	SUBROUTINE GER (A,NC,NR,N,MC,LTEST,JC,V)
	DIMENSION A(NR,NC),JC(1),V(2)
C                 JC IS THE PERMUTATION VECTOR
C                KD IS THE OPTION KEY FOR DETERMINANT EVALUATION
C                KI IS THE OPTION KEY FOR MATRIX INVERSION
C                L IS THE COLUMN CONTROL FOR AX=B
C                M IS THE COLUMN CONTROL FOR MATRIX INVERSION
C                INITIALIZATION
	IW = V(1)
	M = 1
	S = 1.
	L = N + (MC - N) * (IW / 4)
	KD = 2 - MOD (IW / 2, 2)
	IF (KD .EQ. 1) V(2) = 0.
	KI = 2 - MOD(IW,2)
	GO TO (10, 30), KI
C                INITIALIZE JC FOR INVERSION
10    DO 20 I = 1,N
20    JC(I) = I
C                SEARCH FOR PIVOT ROW
30    DO 160 I = 1,N
	GO TO (50, 40),KI
40    M = I
50    IF (I .EQ. N) GO TO 100
	X = - 1.
	DO 60 J = I, N
	IF (X .GT. ABS (A(J,I))) GO TO 60
	X = ABS (A(J,I))
	K = J
60    CONTINUE
	IF (K .EQ. I) GO TO 100
	S = - S
	V(1) = - V(1)
	GO TO (70, 80), KI
70    MU = JC(I)
	JC(I) = JC(K)
	JC(K) = MU
C                INTERCHANGE ROW A AND ROW K
80    DO 90 J = M, L
	X = A(I, J)
	A(I, J) = A(K, J)
90    A(K, J) = X
C                TEST FOR SINGULARITY
100   IF (ABS(A(I,I)) .GT. 0.) GO TO 110
C              MATRIX IS SINGULAR
	IF (KD .EQ. 1) V(1) = 0.
	JC(1) = I - 1
	LTEST = 1
	RETURN
110   GO TO (120, 130), KD
C                COMPUTE THE DETERMINANT
120   IF (A(I,I) .LT. 0.) S = -S
	V (2) = V(2) + ALOG(ABS(A(I,I)))
130   X = A(I,I)
	A (I,I) = 1.
C                REDUCTION OF THE I-TH ROW
	DO 140 J = M,L
	A(I,J) = A(I,J) / X
140   CONTINUE
C                REDUCTION OF ALL REMAINING ROWS
	DO 160 K = 1, N
	IF (K .EQ. I) GO TO 160
	X = A(K,I)
	A (K,I) = 0.
	DO 150 J = M,L
	A(K, J) = A(K, J) - X * A(I, J)
150   CONTINUE
160   CONTINUE
C                AX = B AND DET. (A) ARE NOW COMPUTED
	GO TO (170,220), KI
C                PERMUTATION OF THE COLUMNS FOR MATRIX INVERSION
170   DO 210 J = 1, N
	IF (JC(J) .EQ. J) GO TO 210
	JJ = J + 1
	DO 180 I = JJ, N
	IF (JC(I) . EQ. J) GO TO 190
180   CONTINUE
190   JC(I) = JC(J)
	DO 200 K = 1, N
	X = A(K, I)
	A(K, I) = A(K, J)
200   A(K,J) = X
210   CONTINUE
220   JC(1) = N
	IF (KD .EQ. 1) V(1) = S
	RETURN
	END
	SUBROUTINE SST2 (A,B,AP,BP,X1,X2,Y1,Y2,X,Y,TERM0,AL,AM,ALM,LMAX,MM
     1AX,SPSUM)
	DIMENSION AL(70), AM(70), ALM(70,70), SPSUM(70)
C     FUNCTION DEFINITIONS
	DELL(V) = 2.0 * (SIN(AP * X2 * (V - 1.0)) - SIN(AP * X1 * (V
     1      - 1.0))) / (AP * (X2 - X1) * (V - 1.0))
	DELM(V) = 2.0 * (SIN(BP * Y2 * (V - 1.0)) - SIN(BP * Y1 * (V
     1      - 1.0))) / (BP * (Y2 - Y1) * (V - 1.0))
	DO 10 I = 1, LMAX
10    SPSUM(I) = 0.0
	DO 30 L = 2, LMAX
	RL = L
	ANS = AL(L) * DELL(RL) * COS(AP * X * (RL - 1.0))
	DO 20 I = L, LMAX
	SPSUM(I) = SPSUM(I) + ANS
20    CONTINUE
30    CONTINUE
	DO 50 M = 2,LMAX
	RM = M
	ANS = AM(M) * DELM (RM) * COS (BP * Y * (RM - 1.0))
	DO 40 I = M, LMAX
	SPSUM(I) = SPSUM(I) + ANS
40    CONTINUE
50    CONTINUE
	DO 90 L = 2, LMAX
	DO 90 M = 2, LMAX
	RL = L
	RM = M
	ANS = ALM(L,M) * DELL(RL) * DELM(RM) * COS(BP * Y * (RM
     1      - 1.0)) * COS(AP * X * (RL - 1.0))
	IF (M .GT. L .OR. M .EQ. L) GO TO 60
	LIMIT = L
	GO TO 70
60    LIMIT = M
70    CONTINUE
	DO 80 I = LIMIT,LMAX
80    SPSUM(I) = SPSUM(I) + ANS
90    CONTINUE
	SPSUM(1) = TERM0 / (A * B)
	DO 100 I = 2, LMAX
	SPSUM(I) = (SPSUM(I) + TERM0) / (A * B)
100   CONTINUE
	RETURN
	END
	SUBROUTINE TOUT (Q1, LMAX, MMAX, SPSUM)
	DIMENSION SPSUM(70)
	WRITE (3,30)
	DO 10 I = 1, LMAX
10    SPSUM(I) = Q1 * SPSUM(I)
	DO 20 I = 1, LMAX
20    WRITE (3,40) I, SPSUM(I)
30    FORMAT(26HSINGLE SOURCE TEMP VS LMAX)
40    FORMAT(5(I3,5X,E10.4))
	RETURN
	END
	SUBROUTINE LPLOT (LMAX,SPSUM)
	CHARACTER*1 LINE(51)
	DIMENSION SPSUM(70)
	SMIN = SPSUM(1)
	SMAX = SPSUM(1)
	DO 10 I = 2, LMAX
	IF (SPSUM(I) .LT. SMIN) SMIN = SPSUM(I)
	IF (SPSUM(I) .GT. SMAX) SMAX = SPSUM(I)
10    CONTINUE
	WRITE(4,90) SMAX, SMIN
	DO 20 I = 1, 51
	LINE(I) = '.'
20    CONTINUE
	WRITE (4,100) LINE
	DO 30 I = 1, 51
	LINE(I) = ' '
30    CONTINUE
	LINE (1) = '.'
	LTEST = 0
	DO 80 I = 1, LMAX
	LTEST = LTEST + 1
	J = ((SPSUM(I) - SMIN) / (SMAX - SMIN)) * 50.0 + 1
	IF (LTEST .NE. 10) GO TO 60
	DO 40 K = 2, 51
40    LINE (K) = '.'
	LINE (J) = 'X'
	WRITE (4,110) I, LINE
	LTEST = 0
	DO 50 K = 2, 51
50    LINE (K) = ' '
	GO TO 70
60    LINE (J) = 'X'
	WRITE (4, 120) LINE
	LINE (J) = ' '
70    LINE (1) = '.'
80    CONTINUE
90    FORMAT (1H1, 60X, 17HTMAX-TMIN VS LMAX///1H ,49X,
     1      5HTMAX=,E10.4,5X,5HTMIN=,E10.4)
100   FORMAT (1H0,37X,1H0,2X,51A1)
110   FORMAT (1H ,35X,I3,2X,51A1)
120   FORMAT (1H ,40X,51A1)
      RETURN
      END
