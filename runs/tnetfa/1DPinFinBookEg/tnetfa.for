C	   THE TNETFA PROGRAM AND ALL REALTED MATERIAL ARE SUPPLIED
C	   AS - IS AND WITHOUT WARRANTY OR REPRESENTATION OF ANY KIND.
C	   THE PROGRAM AUTHOR, HIS EMPLOYERS AND PUBLISHERS, PAST, PRESENT
C	   OR FUTURE MAKE NO REPRESENTATIONS RESPECTING THE PROGRAM AND
C	   RELATED MATERIAL, AND EXPRESSLY DISCLAIM ANY LIABILITY FOR
C	   DAMAGES WHETHER DIRECT, CONSEQUENTIAL OR OTHERWISE, ARISING
C	   FROM THE USE OF THE PROGRAM OR RELATED MATERIAL, OR ANY PART
C	   THEREOF.
C	TNETFA - TRANSIENT NETWORK THERMAL ANALYZER -
C	JAN. 29, 1982 VERSION
C	REFERENCES TO EQUATIONS, E.G. T.C.E.E., EX.XX, REFER TO:
C	GORDON N. ELLISON, 'THERMAL COMPUTATIONS IN ELECTRONIC EQUIPMENT'.
C	650 NODE, 4000 CONDUCTOR VERSION
C	50 NODE LIMIT TO MULTIPLE SURFACE RADIATION EXCHANGE
      REAL KFAC,MAXDT,KVFAC,MAXT
      INTEGER CURVE,TPRINT,CTYPE,ATYPE,BTYPE,BARY,UNITS,BB4
      INTEGER CTYBLD
C	THE FOLLOWING DIMENSION MUST BE GREATER THAN OR EQUAL TO
C	THE TOTAL NUMBER OF GENERATOR BLOCKS
      DIMENSION NBLD(300),NA1(300),NAS(300),NB1(300),NBS(300),CBLD(300),
     1       CTYBLD(300)
      DIMENSION RF(50),AA1(50),BB1(50),BB2(50),BB3(50),BB4(50)
      DIMENSION ATYPE(50),BTYPE(50)
      INTEGER stat,TITLE1(14),TITLE2(14),CAPCUR(650),SINCAP,STRCAP
C	NPAIRS AND CURVE MUST HAVE DIMENSIONS EQ OR GT THAN
C	NO. OF INTERPOLABLE CURVES
C	X AND Y MUST HAVE DIMENSIONS EQ OR GT
C	THAN THE NO. OF DATA POINTS FOR ALL CURVES
      DIMENSION NPAIRS(20),CURVE(20),X(100),Y(100)
C	T,Q,NBCNT MUST HAVE DIMENSIONS EQUAL TO OR GREATER THAN
C	THE NUMBER OF NODES
C	NA,NB,C,CTYPE MUST HAVE DIMENSIONS GREATER THAN THE NO. OF CONDUCT
      DIMENSION T(650),C(4000),NA(4000),NB(4000),Q(650),CTYPE(4000)
      DIMENSION NBCNT(650),TP(650),CAP(650),STAB(650)
      DIMENSION NQ(20),NQPRS(20),TM(100),QT(100)
      COMMON /BLK1/ T,C,NA,NB,Q/BLK2/NPAIRS,X,Y/BLK3/RF,CTYPE,CURVE
      COMMON /BLK4/ TZ,SIGMA,TFAC,TCON,KFAC,KVFAC,FLFAC,DFAC,HFAC
      COMMON /BLK5/ AA1,BB1,BB2,BB3,BB4,    ATYPE,BTYPE
      COMMON /BLK6/ NBCNT
      COMMON/BLK7/TP,CAP,STAB,CAPCUR,NQ,NQPRS,TM,QT
C	COMMON BLKS 8-10 ARE DIMENSIONED FOR RADIATION EXCHANGE BETWEEN
C	50 NODES MAXIMUM
C	COMMON BLK11 DIMENSIONED FOR MAXIMUM OF 50 CONSTANT
C	TEMPERATURE NODES
      COMMON/BLK8/IAE(50),EM(50),AR(50)
      COMMON/BLK9/IF(2500),JF(2500),AM(50,50)
      COMMON/BLK10/BM(50),RJM(50)/BLK11/NCTEMP(50)
      ICSCNT = 0
C
C Open input/output files
C
      OPEN(UNIT=1,FILE='INPUT.DAT',STATUS='OLD')
      OPEN(UNIT=2,FILE='OUTPUT.DAT',STATUS='NEW')
C	INPUT DAT
C	TWO TITLE CARDS(BLANK IF NEC.) REQUIRED
C10    READ (1,780, END=15) (TITLE1(I),I=1,8)
10    READ (1,780, iostat=stat) (TITLE1(I),I=1,8)
      IF (stat /= 0) CALL EXIT
C-Fabio replaced with END=15 above and added below   IF (EOF(1) .NE. 0) CALL EXIT
C15    CALL EXIT
      READ (1,780) (TITLE2(I),I=1,8)
C	INITIALIZE
      IRCTMX = 50
      DO 20 I = 1,IRCTMX
      AR(I) = 0.0
      EM(I) = 0.0
20    CONTINUE
      DO 30 I = 1,IRCTMX
      DO 30 J = 1,IRCTMX
      AM(I,J) = 0.0
30    CONTINUE
      IRADFLG = 0
CCC
C	MODE = 0 IF SUPPRESSION OF ITERATION IS DESIRED
C	MODE = 1 IF STEADY STATE REQUIRED
C	MODE = 2 IF POTENTIAL FLOW CALCULATION IS DESIRED
C	MODE = 3 IF TRANSIENT CALC REQUIRED - FORWARD TIME DIFFERENCE
C	UNITS = 0 FOR X,L,D=FT, V=FT/SEC, Q=BTU/HR, T=DEG F,
C	C=BTU/HR-DEG F, G=CUFT/MIN, RHOCP=BTU/CUFT-DEG. F,
C	CAP=BTU/DEG. F, TIME=HR
C	UNITS = 1 FOR X,L,D=CM, V=CM/SEC, Q=WATTS, T=DEG C,
C	C=WATTS/DEG C, G=CUCM/SEC, RHOCP=CAL/CUCM-DEG. C,
C	CAP=JOULES/DEG. C, TIME=SEC
C	UNITS = 2 FOR X,L,D=IN, V=FT/MIN, Q=WATTS, T=DEG C,
C	C=WATTS/DEG C, G=CUFT/MIN, RHOCP=CAL/CUCM-DEG. C,
C	CAP=JOULES/DEG. C, TIME=SEC
      READ (1,*) MODE,UNITS,ICSE
C	NUMBER OF NODES(INCLUDING CONSTANT TEMP NODES),
C	NUMBER OF CONSTANT TEMPERATURE NODES
C	NUMBER OF SPECIAL TEMPERATURE AND/OR SOURCE POWER(EXCLUDING
C	CONSTANT TEMPERATURE NODES), NUMBER OF CONDUCTORS
C	SINGLY CONSTRUCTED, NUMBER OF AUTO-GENERATOR BLOCKS, SIMPLE
C	NON-LINEAR COND. CURVES,
C	NATURAL CONV. COND. CARDS, FORCED CONV. COND. CARDS
C	DATA CARDS
      READ (1,*) NN,NCONST,NZS,NQCRV,NCBLC,NCS,NCRV,NNCNV,NFCNV
C	STARTING TEMPERATURES(INCLUDING CONSTANT TEMPS) AND POWER INPUTS
C	Q = VX0/DX OR VY0/DY (FLOW B.C.) FOR MODE = 2
      READ (1,*) TSET,QSET
      DO 40 I = 1,NN
      T(I) = TSET
      Q(I) = QSET
40    CONTINUE
      NSUM = 0
      I2 = NCONST + NZS
      DO 50 I = 1,I2
      NSUM = NSUM + 1
      IF (NSUM .EQ. NCONST
     1     .OR. NSUM .LT. NCONST) READ (1,  * )NCTEMP(I),T(NCTEMP(I))
      IF (NSUM .GT. NCONST) READ (1,  * )JQ,T(JQ),Q(JQ)
50    CONTINUE
C	Q VX. TIME CURVES MUST BE ARRANGED IN ORDER OF ASCENDING
C	NODE NUMBERS
C	 NQ(I) = NODE NO. FOR THIS Q VS. TIME CURVE
C	NQPRS(I) = NO. Q VS. TIME DATA PAIRS
      CONTINUE
      IF (NQCRV .EQ. 0) GO TO 70
      J1QP = 1
      DO 60 I = 1,NQCRV
      READ (1,*) NQ(I),NQPRS(I)
      J2QP = J1QP + NQPRS(I) - 1
      READ (1,*) (TM(J),QT(J),J=J1QP,J2QP)
      J1QP = J2QP + 1
60    CONTINUE
C	INITIALIZE ALL NODES WITH A SMALL CAPACITANCE
70    CONTINUE
      DO 80 I = 1,NN
      CAPCUR(I) = 0
      CAP(I) = 1.0E - 20
80    CONTINUE
C	CAPACITANCE INPUT
      READ (1,*) SINCAP,STRCAP
      IF (SINCAP .EQ. 0) GO TO 100
      DO 90 I = 1,SINCAP
      READ (1,*) J,C1,IC2
      CAP(J) = C1
      CAPCUR(J) = IC2
90    CONTINUE
100   IF (STRCAP .EQ. 0) GO TO 130
      DO 120 I = 1,STRCAP
      READ (1,*) IACAP,IBCAP,CAP2,CAPCV2
      DO 110 J = IACAP,IBCAP
      CAP(J) = CAP2
      CAPCUR(J) = CAPCV2
110   CONTINUE
120   CONTINUE
C	 NB(I) IS NEGATIVE FOR FLUID(AIR) NODE(PARTICULARLY IN NAT CONV)
C	CTYPE(I)=-1, C(I)=(SCRIPT F(NA,NB))*AREA(NA))
C	CTYPE(I)=-2, C(I)=(ANGLE FACTOR(NA,NB))*AREA(NA))
C	CTYPE(I)=ZERO IF NO INTERPOLATION ETC. IS REQUIRED,
C	CTYPE FOR FLOW CALCULATION
C	 CTYPE = 0 FOR X DIRECTION, C(I) = 1/DX**2
C	 CTYPE = 1 FOR Y DIRECTION, C(I) = 1/DY**2
C	 C(I)=CONDUCTANCE
C	 VALUE OF CTYPE(I) REFERENCES CURVE(I)
C	CTYPE(I) GT ZERO AND LT 101 FOR T-DEPENDENT CONDUCTANCE AND OR
C	CAPCITANCE
C	 C(I)=COND CROSS SECTIONAL AREA/PATH LENGTH
C	 CTYPE(I) MUST EQUAL CURVE(I) BELOW FOR NCRV DATA
C	CTYPE(I) MUST BE GT 100 AND LT 201 FOR NAT CON
C	 VALUE OF CTYPE(I) - 100 REFERENCES ARGUMENT OF
C	CTYPE(I) MUST BE GT 200 FOR FOR FORCED CONV,
C	 C(I)=COND CROSS-SEC. AREA
C	 VALUE OF CTYPE(I) - 200 REFERENCES ARGUMENT OF BB
C	 WHEN BTYPE = 5, 6     SUBSTRATE NODES MUST BE SEQUENTIALL
C	 NUMBERED FROM LEADING EDGE NODE
C	 IF MORE THAN 1 SUBSTRATE OF THIS TYPE, THE ADDITIONAL
C	 SUBSTRATE NODE NOS. MUST FOLLOW WITHOUT BREAK AND IN SEQUENCE
C	CTYPE(I) MUST BE GT 300 AND LT 401 FOR FLUID CONDUCTORS
C	 C(I)=MASS FLOW RATE G
C	CTYPE FOR CFM, PRESSURE CALCULATION ---- C(I)=R
C	FOR P=R*G**2 OR R*G
C	 CTYPE = 401 FOR LAMINAR FLO
C	 CTYPE = 402 FOR TURBULENT FLO
130   JSTOR1 = 0
      JSTOR2 = 0
      IF (NCBLC .EQ. 0) GO TO 180
      DO 140 N = 1,NCBLC
      READ (1,*) NBLD(N),NA1(N),NAS(N),NB1(N),NBS(N),CBLD(N),CTYBLD(N)
140   CONTINUE
      J = 0
C	AUTOMATIC CONDUCTOR GENERATION
      DO 170 N = 1,NCBLC
C	 CONDUCTOR GENERATION FOR N-TH BLOCK
      ISUMNA = 0
      ISUMNB = 0
      NBD = NBLD(N)
      DO 160 L = 1,NBD
      J = J + 1
      NA(J) = NA1(N) + ISUMNA
      NB(J) = NB1(N) + ISUMNB
      C(J) = CBLD(N)
      CTYPE(J) = CTYBLD(N)
C	 TEMPORARY STORAGE AND ABSOLUTE VALUE OF NA,NB
      NASTOR = IABS(NA(J))
      NBSTOR = IABS(NB(J))
C	 DETERMINATION OF RETURN CONDUCTOR
C	DO NOT REPEAT DIAGONAL ELEMENT FOR MULTI-SURF RAD. EXCH.
      IF (IABS(NA(J)) .EQ. IABS(NB(J)) .AND. CTYPE(J) .E
     1     Q.  - 2) GO TO 150
      J = J + 1
      NB(J) = NASTOR
      NA(J) = NBSTOR
      C(J) = CBLD(N)
      CTYPE(J) = CTYBLD(N)
      IF (CTYBLD(N) .LT. 301 .OR. CTYBLD(N) .GT. 400) GO TO 150
      C(J) = 0.0
150   ISUMNA = ISUMNA + NAS(N)
      ISUMNB = ISUMNB + NBS(N)
C	 STORE TOTAL NO. OF CONDUCTORS     GENERATED UP TO HERE
      JSTOR1 = J
160   CONTINUE
170   CONTINUE
180   IF (NCS .EQ. 0) GO TO 210
      J = JSTOR1 + 1
      DO 200 I = 1,NCS
      JSTOR2 = JSTOR2 + 1
      READ (1,*) NA(J),NB(J),C(J),CTYPE(J)
C	DO NOT REPEAT DIAG ELEMENT IF
      IF (IABS(NA(J)) .EQ. IABS(NB(J)) .AND. CTYPE(J) .E
     1     Q.  - 2) GO TO 190
      JSTOR2 = JSTOR2 + 1
      NA(J + 1) = IABS(NB(J))
      NB(J + 1) = IABS(NA(J))
      C(J + 1) = C(J)
      IF (CTYPE(J) .GT. 300 .AND. CTYPE(J) .LT. 401) C(J + 1) = 0.0
      CTYPE(J + 1) = CTYPE(J)
      J = J + 2
      GO TO 200
190   J = J + 1
200   CONTINUE
C	CONDUCTOR ORDERING SCHEME - ARRANGES NA S IN GROUPS
C	OF ASCENDING VALUE
210   JJ2 = JSTOR1 + JSTOR2 - 1
      I2 = JSTOR1 + JSTOR2
      NCND = I2
      DO 220 J = 1,JJ2
      IP1 = J + 1
      DO 220 I = IP1,I2
      IF (IABS(NA(J)) .LT. IABS(NA(I))) GO TO 220
      ITEMPA = NA(J)
      ITEMPB = NB(J)
      TEMPC = C(J)
      ITECTP = CTYPE(J)
      NA(J) = NA(I)
      NB(J) = NB(I)
      C(J) = C(I)
      CTYPE(J) = CTYPE(I)
      NA(I) = ITEMPA
      NB(I) = ITEMPB
      C(I) = TEMPC
      CTYPE(I) = ITECTP
220   CONTINUE
C	ASSIGN NEGATIVE SIGN TO NODE NUMBERS NA IF CONSTANT
C	TEMPERATURE NODE
      CALL NEGNODE (NCONST,NCND)
C	SCAN TO CHECK FOR MULTI. SURF. RADIATION EXCHANGE
      DO 240 I = 1,NCND
      IF (CTYPE(I) .NE.  - 2) GO TO 240
      IRADFLG = 1
      GO TO 250
240   CONTINUE
230   IF (IRADFLG .EQ. 0) GO TO 300
C	NODE NO., EMISSIVITY, AREA INPUT FOR MULT. SURF. RAD.
250   READ (1, *)ISINA,ISTRA
      IF (ISINA .EQ. 0) GO TO 270
C	SINGLY INPUT VALUES OF AREA(ARR), EMISSIVITY(EMM) FOR NODE J
      DO 260 I = 1,ISINA
      READ (1, *)J,ARR,EMM
CCC A2540
      IAE(I) = J
      AR(I) = ARR
      EM(I) = EMM
260   CONTINUE
270   IF (ISTRA .EQ. 0) GO TO 300
      J1 = ISINA + 1
C	STRING INPUT OF AREA, EMISSIVITY FOR NODES IAA TO IBA SEQUENTIALL
      DO 290 I = 1,ISTRA
      READ (1, *)IAA,IBA,ARR,EMM
      J2 = J1 + (IBA - IAA)
      IAE1 = IAA
      DO 280 J = J1,J2
      IAE(J) = IAE1
      AR(J) = ARR
      EM(J) = EMM
      IAE1 = IAE1 + 1
280   CONTINUE
      J1 = J2 + 1
290   CONTINUE
C	CURVE DATA - NPAIRS(I)=NO. OF XY PAIRS FOR ITH CURVE
300   IF (NCRV .EQ. 0) GO TO 320
      J1NP = 1
      DO 310 I = 1,NCRV
      READ (1,*) CURVE(I),NPAIRS(I)
      J2NP = J1NP + NPAIRS(I) - 1
      READ (1,*) (X(J),Y(J),J=J1NP,J2NP)
      J1NP = J2NP + 1
310   CONTINUE
320   IF (NNCNV .EQ. 0) GO TO 340
C	CTYPE(J) - 100 = ARG I IN AA(I)
C	ATYPE DENOTES SPECIFIC NATURAL CONVECTION MODE
C	AA1=SIGNIFICANT DIMENSION
      DO 330 I = 1,NNCNV
      READ (1,*) ATYPE(I),AA1(I)
330   CONTINUE
C	CTYPE(J) - 200 = ARG I IN BB(I)
C	BTYPE DENOTES SPECIFIC FORCED CONVECTION MODE
C	DX = CONSTANT NODE LENGTH
C	BB1 = V, BB2 = D, BB3 = L,DX, BB4 = FIRST F.P. NODE
340   IF (NFCNV .EQ. 0) GO TO 360
      DO 350 I = 1,NFCNV
      READ (1,*) BTYPE(I),BB1(I),BB2(I),BB3(I),BB4(I)
350   CONTINUE
360   IF (MODE .NE. 2) GO TO 370
      READ (1,*) V0
C	NLOOP=NO. OF STEADY STATE ITERATIONS
C	BETA=STEADY STATE OVER RELAXATION CONSTANT
C	ALDT=STEADY STATE MAX TEMP CHANGE/ITERATION TERMINATE CRITERIA
C	LOOPEN=0----------SUPPRESS NODE DETAIL
C	LOOPEN=1----------PRINT NODE DETAIL
C	DELT=TRANSIENT TIME STEP
C	MAXT=TRANSIENT MAX TIME
C	TPRINT=NO. OF STEADY STATE ITERATIONS OR TRANSIENT TIME STEPS
C	   BETWEEN TEMP PRINTOUTS
370   READ (1,*) NLOOP,BETA,ALDT,LOOPEN
      READ (1,*) DELT,MAXT
      READ (1,*) TPRINT,NPRINT
      WRITE (2,760)
      WRITE (2,770)
      WRITE (2,800) (TITLE1(I),I=1,8)
      WRITE (2,800) (TITLE2(I),I=1,8)
      IF (UNITS .EQ. 0) WRITE (2,810)
      IF (UNITS .EQ. 1) WRITE (2,820)
      IF (UNITS .EQ. 2) WRITE (2,830)
      WRITE (2,790) NN,NCND
      WRITE (2,840) NLOOP,TPRINT,NPRINT,LOOPEN,ALDT,BETA
CCC
      IF (NCRV .EQ. 0) GO TO 390
      WRITE (2,850)
      J1NP = 1
      DO 380 I = 1,NCRV
      WRITE (2,880) CURVE(I),NPAIRS(I)
      J2NP = J1NP + NPAIRS(I) - 1
      WRITE (2,890) (X(J),Y(J),J=J1NP,J2NP)
      J1NP = J2NP + 1
380   CONTINUE
390   IF (NQCRV .EQ. 0) GO TO 410
      WRITE (2,860)
      J1QP = 1
      DO 400 I = 1,NQCRV
      WRITE (2,870) NQ(I),NQPRS(I)
      J2QP = J1QP + NQPRS(I) - 1
      WRITE (2,890) (TM(J),QT(J),J=J1QP,J2QP)
      J1QP = J2QP + 1
400   CONTINUE
410   IF (NFCNV .EQ. 0) GO TO 490
      WRITE (2,900)
      DO 480 I = 1,NFCNV
      BARY = BTYPE(I)
      GO TO (420,430,440,460,450,470), BARY
420   WRITE (2,910) I,BB1(I),BB2(I),BB3(I)
      GO TO 480
430   WRITE (2,920) I,BB1(I),BB2(I),BB3(I)
      GO TO 480
440   WRITE (2,930) I,BB1(I),BB3(I)
      GO TO 480
450   WRITE (2,940) I,BB1(I),BB3(I),BB4(I)
      GO TO 480
460   WRITE (2,950) I,BB1(I),BB3(I)
      GO TO 480
470   WRITE (2,960) I,BB1(I),BB3(I),BB4(I)
480   CONTINUE
490   IF (NNCNV .EQ. 0) GO TO 570
      WRITE (2,690)
      DO 560 I = 1,NNCNV
      BARY = ATYPE(I)
      GO TO (500,510,520,530,540,550,551,552),BARY
500   WRITE (2,700) I,AA1(I)
      GO TO 560
510   WRITE (2,710) I,AA1(I)
      GO TO 560
520   WRITE (2,720) I,AA1(I)
      GO TO 560
530   WRITE (2,730) I,AA1(I)
      GO TO 560
540   WRITE (2,740) I,AA1(I)
      GO TO 560
550   WRITE (2,750) I,AA1(I)
      GO TO 560
551   WRITE(2,751) I, AA1(I)
      GO TO 560
552   WRITE(2,752) I, AA1(I)
560   CONTINUE
570   IF (IRADFLG .EQ. 0) GO TO 590
C	COUNT NO. OF NON-ZERO AR TO GET NO. OF MULTI. SURFS.
C	FOR RADIATION EXCHANGE
      IRCNT = 0
      DO 580 I = 1,IRCTMX
      IF (AR(I) .NE. 0.0) IRCNT = IRCNT + 1
580   CONTINUE
590   IUNITS = UNITS + 1
      GO TO (600,610,620),IUNITS
600   TZ = 460.0
      SIGMA = 0.1714
      TFAC = 1.0
      TCON = 0.0
      KFAC = 1.0
      KVFAC = 1.0
      FLFAC = 60.0
      DFAC = 1.0
      HFAC = 1.0
      GO TO 630
610   TZ = 273.0
      SIGMA = 5.669E - 04
      TFAC = 1.8
      TCON = 32.0
      KFAC = 1.0 / 57.79
      KVFAC = 928.0308
      FLFAC = 4.184 / 62.43
      DFAC = 1.0 / (2.54 * 12.0)
      HFAC = 1.0 / 1761.0
      GO TO 630
620   TZ = 273.0
      SIGMA = 3.657E - 3
      TFAC = 1.8
      TCON = 32.0
      KFAC = 2.54 / 57.79
      KVFAC = 12.0 * 60.0
      FLFAC = ((12.0 * 2.54) ** 3) * 4.184 / (62.43 * 60.0)
      DFAC = 1.0 / 12.0
      HFAC = (2.54 ** 2) / 1761.0
630   IF(IRADFLG.EQ.0) GO TO 635
      CALL NSCAN (NCND,IRCNT)
      CALL AADJ (IRCNT)
      CALL INVAM (IRCNT)
      CALL SETBM (IRCNT)
      CALL RADIOS (IRCNT)
635   IF (MODE .NE. 0) GO TO 640
      CALL TEMPRT (NN,LOOPCT,MAXDT,MODE)
      CALL NDET (IRADFLG,IRCNT,NCND,LOOPCT,MAXDT,MODE)
      GO TO 660
C	COUNT NO. OF NB FOR EACH NA AND STORE AT NBCNT( )
640   NNCND = NCND + 1
      NA(NNCND) = 0
      CALL COUNT (NN,NNCND)
      GO TO (650,650,670),MODE
650   CALL STSTA (NLOOP,LOOPCT,NN,ALDT,NCND,TPRINT,LOOPEN,NPRINT,MODE,
     1     V0,ICSE,BETA,MAXDT,IRADFLG,IRCNT)
      IF (ICSE .EQ. 0) GO TO 660
      ICSNT = ICSNT + 1
      IF (ICSCNT.EQ.ICSE.OR.ICSCNT.LT.ICSE) GO TO 230
660   WRITE (2,760)
      GO TO 680
670   CALL TRANF (NN,NQCRV,DELT,MAXT,NPRINT,TPRINT,NCND,IRADFLG,IRCNT)
680   CONTINUE
      GO TO 10
690   FORMAT (1H0,4X,28HNATURAL CONVECTION PARAMETER/)
700   FORMAT (1H ,4X,I3,4X,31HVERTICAL FLAT PLATE OR CYLINDER,62X,2HP=,
     1       E10.4)
710   FORMAT (1H ,4X,I3,4X,83HHORIZONTAL FLAT PLATE OR CYLINDER, HEATED
     1SIDE FACING UP OR COOLED SIDE FACING DOWN,10X,2HP=,E10.4)
720   FORMAT (1H ,4X,I3,4X,83HHORIZONTAL FLAT PLATE OR CYLINDER, HEATED
     1SIDE FACING DOWN OR COOLED SIDE FACING UP,10X,2HP=,E10.4)
730   FORMAT(1H ,4X,I3,4X,26HHORIZONTAL PARALLEL PLATES,
     110X,2HB=,E10.4)
740   FORMAT(1H ,4X,I3,4X,24HVERTICAL PARALLEL PLATES,
     110X,2HB=,E10.4)
750   FORMAT(1H ,4X,I3,4X,23HSMALL SURFACE, VERTICAL, 10X,2HP=,E10.4)
751   FORMAT(1H ,4X,I3,4X,74HSMALL HORIZONTAL SURFACE, HEATED SIDE FACIN
     1G UP OR COOLED SIDE FACING DOWN,10X,2HP=,E10.4)
752   FORMAT(1H ,4X,I3,4X,74HSMALL HORIZONTAL SURFACE, HEATED SIDE FACIN
     1G DOWN OR COOLED SIDE FACING UP,10X,2HP=,E10.4)
760   FORMAT (1H1)
770   FORMAT (1H ,48X,24HNETWORK THERMAL ANALYSIS//)
780   FORMAT (8A10)
790   FORMAT (1H0,4X,16HNUMBER OF NODES=,I4,5X,21HNUMBER OF CONDUCTORS=,
     1       I4)
800   FORMAT (1H ,8A10)
810   FORMAT(1H0,4X,7HUNITS=0)
820   FORMAT(1H0,4X,7HUNITS=1)
830   FORMAT(1H0,4X,7HUNITS=2)
840   FORMAT (1H0,4X,6HNLOOP=,I5,5X,7HTPRINT=,I5,5X,7HNPRINT=,I5,5X,
     1   7HLOOPEN=,I5,5X,
     2       5HALDT=,E10.4,5X,5HBETA=,F5.2)
850   FORMAT (1H0,4X,10HARRAY DATA)
860   FORMAT(1H0,4X,17HTIME, POWER ARRAY)
870   FORMAT(1H0,4X,4HNODE,I4,5X,I3,2X,9HT-Q PAIRS/)
880   FORMAT (1H0,4X,5HARRAY,I3,5X,I3,2X,9HX-Y PAIRS/)
890   FORMAT (1H ,4X,E10.4,1H,,2X,E10.4,4X,E10.4,1H,,2X,E10.4,4X,
     1E10.4,1H,,2X,E10.4,4X,E10.4,1H,,2X,E10.4)
900   FORMAT (1H0,4X,
     1       55HDUCT AND/OR FLAT PLATE PARAMETERS FOR FORCED CONVECTION/
     2       )
910   FORMAT (1H ,4X,I3,4X,19HLAMINAR FLOW - DUCT,10X,4HVEL=,
     1       E10.4,5X,2HD=,E10.4,5X,2HL=,E10.4)
920   FORMAT (1H ,4X,I3,4X,21HTURBULENT FLOW - DUCT,10X,4HVEL=,
     1       E10.4,5X,2HD=,E10.4,5X,2HL=,E10.4)
930   FORMAT (1H ,4X,I3,4X,36HLAMINAR FLOW OVER FLAT PLATE - AVE H,12X,
     1       4HVEL=,E10.4,5X,2HL=,E10.4)
940   FORMAT (1H ,4X,I3,4X,38HLAMINAR FLOW OVER FLAT PLATE - LOCAL H,
     1       10X,4HVEL=,E10.4,5X,3HDX=,E10.4,5X,4HSTN=I4)
950   FORMAT (1H ,4X,I3,4X,38HTURBULENT FLOW OVER FLAT PLATE - AVE H,
     1       10X,4HVEL=,E10.4,5X,2HL=,E10.4)
960   FORMAT (1H ,4X,I3,4X,40HTURBULENT FLOW OVER FLAT PLATE - LOCAL H,
     1       10X,4HVEL=,E10.4,5X,3HDX=,E10.4,5X,4HSTN=,I4)
      END
CCC B
      SUBROUTINE STSTA (NLOOP,LOOPCT,NN,ALDT,NCND,TPRINT,LOOPEN,NPRINT,M
     1ODE,V0,ICSE,BETA,MAXDT,IRADFLG,IRCNT)
C	STEADY-STATE SOLUTION SCHEME BASED ON T.C.E.E., E1.16.
      REAL KFAC,MAXDT,KVFAC
      INTEGER CURVE,TPRINT,CTYPE,ATYPE,BTYPE,BARY,UNITS,BB4,CTYBL
      DIMENSION NBLD(300),NA1(300),NAS(300),NB1(300),CBLD(300),
     1          CTYBLD(300)
      DIMENSION RF(50),AA1(50),BB1(50),BB2(50),BB3(50),BB4(50)
      DIMENSION ATYPE(50),BTYPE(50)
      INTEGER TITLE1(14),TITLE2(14),CAPCUR(650),SINCAP,STRCAP
      DIMENSION T(650),C(4000),NA(4000),NB(4000),Q(650),CTYPE(4000)
      DIMENSION NBCNT(650),TP(650),CAP(650),STAB(650),NQ(20),NQPRS(20)
     1,TM(100)          ,QT(100)
      DIMENSION NPAIRS(20),CURVE(20),X(100),Y(100)
      COMMON /BLK1/ T,C,NA,NB,Q/BLK2/NPAIRS,X,Y/BLK3/RF,CTYPE,CURVE
      COMMON /BLK4/ TZ,SIGMA,TFAC,TCON,KFAC,KVFAC,FLFAC,DFAC,HFAC
      COMMON /BLK5/ AA1,BB1,BB2,BB3,BB4,ATYPE,BTYPE
      COMMON /BLK6/ NBCNT
      COMMON /BLK7/TP,CAP,STAB,CAPCUR,NQ,NQPRS,TM,QT
C	INITIALIZE
      LOOPCT = 0
      NTPRIN = TPRINT
      NEPRIN = LOOPEN
      CALL TEMPRT (NN,LOOPCT,MAXDT,1)
C	START ITERATION LOOPING
CCC B240
      DO 120 L = 1,NLOOP
C	CALCULATE BM MATRIX AND RADIOSITY BEFORE EACH SET OF
C	ITERATIONS IF MULTI-SURFACE RADIATION EXCHANGE IS REQUIRED
      IF (IRADFLG .EQ. 1) CALL SETBM (IRCNT)
      IF (IRADFLG .EQ. 1) CALL RADIOS (IRCNT)
      MAXDT = 0.0
      K1 = 1
      LOOPCT = LOOPCT + 1
C	START LOOP TO DETERMINE T(I)
      DO 90 I = 1,NN
C	STORE T(I) FOR COMPARISON TEST LATER
      TOLD = T(I)
C	IS THIS A CONSTANT TEMP OR NN+1 NODE. IF ANSWER IS YES,
C	DO NOT ITERATE THIS NODE
      IF (NA(K1) .EQ. 0) GO TO 100
C	INITIALIZATION FOR EACH ITERATION OF T(I)
      RNUM = 0.0
      DENOM = 0.0
      IF (NA(K1) .LT. 0) GO TO 10
      GO TO 20
10    K1 = K1 + NBCNT(I)
      GO TO 90
C	CALC OF T(I)
20    J2 = NBCNT(I) + K1 - 1
      DO 80 J = K1,J2
      N = IABS(NB(J))
      IF (CTYPE(J)) 30,70,40
30    IF (CTYPE(J) .EQ.  - 2) CALL REX (I,N,IRCNT,C(J),CC)
      IF (CTYPE(J) .EQ.  - 1) CALL RCOND (I,N,C(J),CC)
      GO TO 60
40    IF (CTYPE(J) .GT. 100) GO TO 50
      LIM1 = CTYPE(J)
      CALL COND (CURVE(LIM1),C(J),T(I),T(N),CC)
      GO TO 60
50    CALL CONV (J,CC,RE,RKINV,RLX)
60    RNUM = RNUM + CC * T(N)
      DENOM = DENOM + CC
      GO TO 80
70    RNUM = RNUM + C(J) * T(N)
      DENOM = DENOM + C(J)
80    CONTINUE
      K1 = J2 + 1
      RNUM = RNUM + Q(I)
      T(I) = RNUM / DENOM
C	STORE NEW VALUE OF MAX TEMP CHANGE(MAXDT) IF NECESSARY
      DT = T(I) - TOLD
      T(I) = TOLD + BETA * DT
      DT = T(I) - TOLD
      DT = ABS(DT)
      IF (MAXDT .GT. DT) GO TO 90
      MAXDT = DT
90    CONTINUE
C	TEST FOR PROBLEM TERMINATION BASED ON TEMP CHANGE
100   IF (MAXDT .LT. ALDT) GO TO 140
C	TEST FOR PRINT CALLS FOLLOW
      IF (LOOPCT .NE. NTPRIN) GO TO 110
      NTPRIN = NTPRIN + TPRINT
      CALL TEMPRT (NN,LOOPCT,MAXDT,1)
110   IF (LOOPCT .NE. NEPRIN) GO TO 120
      NEPRIN = NEPRIN + LOOPEN
      CALL BAL (NCND,IRCNT)
120   CONTINUE
      IF (IRADFLG .EQ. 0) GO TO 130
      CALL SETBM (IRCNT)
      CALL RADIOS (IRCNT)
130   IF (NPRINT.NE.0) CALL NDET(IRADFLG,IRCNT,NCND,LOOPCT,MAXDT,1)
      GO TO 160
C	FINAL PRINT CALL BEFORE PROBLEM TERMINATION
140   CALL TEMPRT (NN,LOOPCT,MAXDT,1)
C	PRINT CONDUCTORS AT PROB TERMINATION IF REQUESTED
      IF (NPRINT.NE.0) CALL NDET (IRADFLG,IRCNT,NCND,LOOPCT,MAXDT,1)
      GO TO 160
150   IF (LOOPEN.NE.0) CALL BAL(NCND,IRCNT)
160   IF (MODE.EQ.2) CALL FLOW(NCND,V0)
      WRITE (2,180)
C
180   FORMAT(1H1)
      RETURN
      END
      SUBROUTINE TRANF (NN,NQCRV,DELTM,RTM,NPRINT,TPRINT,NCND,IRADFLG,IR
     1CNT)
C	TIME-DEPENDENT SOLUTION SCHEME BASED ON T.C.E.E., E1.18.
      REAL KFAC,MAXDT,KVFAC
      INTEGER CURVE,TPRINT,CTYPE,ATYPE,BTYPE,BARY,UNITS,BB4,CTYBLD
      DIMENSION NBLD(300),NA1(300),NAS(300),NB1(300),CBLD(300),
     1          CTYBLD(300)
      DIMENSION RF(50),AA1(50),BB1(50),BB2(50),BB3(50),BB4(50)
      DIMENSION ATYPE(50),BTYPE(50)
      INTEGER TITLE1(14),TITLE2(14),CAPCUR(650),SINCAP,STRCAP
      DIMENSION NPAIRS(20),CURVE(20),X(100),Y(100)
      DIMENSION T(650),C(4000),NA(4000),NB(4000),Q(650),CTYPE(4000)
      DIMENSION NBCNT(650),TP(650),CAP(650),STAB(650),NQ(20),NQPRS(20),
     1TM(100),QT(100)
      COMMON /BLK1/ T,C,NA,NB,Q/BLK2/NPAIRS,X,Y/BLK3/RF,CTYPE,CURVE
      COMMON /BLK4/ TZ,SIGMA,TFAC,TCON,KFAC,KVFAC,FLFAC,DFAC,HFAC
      COMMON /BLK5/ AA1,BB1,BB2,BB3,BB4,ATYPE,BTYPE
      COMMON /BLK6/ NBCNT
      COMMON /BLK7/TP,CAP,STAB,CAPCUR,NQ,NQPRS,TM,QT
      NTPRIN = TPRINT
      TIME = 0.0
      ISTEP = 0
      STASV = 0.0
C	PRINT TEMPS AT ZERO TIME
      CALL TEMPRT (NN,0,0.0,3)
10    J2 = 0
C	START NEW TIME
      TIME = TIME + DELTM
      IF (TIME .GT. RTM) GO TO 140
      ISTEP = ISTEP + 1
      M1 = 1
      K1 = 1
      DO 110 I = 1,NN
      IF (NA(K1) .LT. 0) GO TO 100
      J2 = K1 - 1 + NBCNT(I)
C	CALC SUM OF CONDUCTANCES, SUM OF TEMP*COND
      CSUM = 0.0
      CTSUM = 0.0
      DO 70 J = K1,J2
      N = IABS(NB(J))
      IF (CTYPE(J)) 20,30,40
20    IF (IRADFLG .EQ. 1) CALL REX (I,N,IRCNT,C(J),CC)
      IF (IRADFLG .EQ. 0) CALL RCOND (I,N,C(J),CC)
      GO TO 60
30    CC = C(J)
      GO TO 60
40    IF (CTYPE(J) .GT. 100) GO TO 50
      LIM1 = CTYPE(J)
      CALL COND (CURVE(LIM1),C(J),T(I),T(N),CC)
      GO TO 60
50    CALL CONV (J,CC,RE,RKINV,RLX)
60    CSUM = CSUM + CC
      CTSUM = CTSUM + CC * T(N)
70    CONTINUE
C	GET CAPCITANCE AND POWER DISSIP. FOR NODE I
      IF (NQCRV .EQ. 0) GO TO 80
      CALL QP (I,TIME,NQCRV,QPI)
      GO TO 90
80    QPI = Q(I)
90    CALL CAPC (I,RDVCP)
      DTDCA = DELTM / RDVCP
C	CALC STABILITY CONSTANT
      STAB(I) = DTDCA * CSUM
C	CALC TEMP AT TIME STEP
      TP(I) = T(I) * (1.0 - STAB(I)) + DTDCA * CTSUM + DTDCA * QPI
      IF (STAB(I) .GT. STASV) STASV = STAB(I)
100   K1 = K1 + NBCNT(I)
110   CONTINUE
      K = 1
      DO 130 J = 1,NN
      IF (NA(K) .LT. 0) GO TO 120
      T(J) = TP(J)
120   K = K + NBCNT(J)
130   CONTINUE
      IF (IRADFLG .EQ. 1) CALL SETBM (IRCNT)
      IF (IRADFLG .EQ. 1) CALL RADIOS (IRCNT)
      IF (ISTEP .NE. NTPRIN) GO TO 10
      CALL TEMPRT (NN,ISTEP,TIME,3)
      NTPRIN = NTPRIN + TPRINT
      GO TO 10
140   IF (NPRINT .EQ. 0) GO TO 150
C	RESET TO TIME AT LAST STEP
      TIME = TIME - DELTM
      CALL NDET (IRADFLG,IRCNT,NCND,ISTEP,TIME,3)
150   CONTINUE
      RETURN
      END
      SUBROUTINE CAPC (II,RDVCP)
      REAL KFAC,MAXDT,KVFAC
      INTEGER CURVE,TPRINT,CTYPE,ATYPE,BTYPE,BARY,UNITS,BB4,CTYBLD
      DIMENSION NBLD(300),NA1(300),NAS(300),NB1(300),CBLD(300),
     1          CTYBLD(300)
      DIMENSION RF(50),AA1(50),BB1(50),BB2(50),BB3(50),BB4(50)
      DIMENSION ATYPE(50),BTYPE(50)
      INTEGER TITLE1(14),TITLE2(14),CAPCUR(650),SINCAP,STRCAP
      DIMENSION T(650),C(4000),NA(4000),NB(4000),Q(650),CTYPE(4000)
      DIMENSION NBCNT(650),TP(650),CAP(650),STAB(650),NQ(20),NQPRS(20),
     1TM(100),QT(100)
      COMMON /BLK1/ T,C,NA,NB,Q/BLK2/NPAIRS,X,Y/BLK3/RF,CTYPE,CURVE
      COMMON /BLK4/ TZ,SIGMA,TFAC,TCON,KFAC,KVFAC,FLFAC,DFAC,HFAC
      COMMON /BLK5/ AA1,BB1,BB2,BB3,BB4,ATYPE,BTYPE
      COMMON /BLK6/ NBCNT
      COMMON /BLK7/TP,CAP,STAB,CAPCUR,NQ,NQPRS,TM,QT
      DIMENSION NPAIRS(20),CURVE(20),X(100),Y(100)
      J = CAPCUR(II)
      IF (J .NE. 0) CALL COND (CURVE(J),CAP(II),T(II),T(II),RDVCP)
      IF (J .EQ. 0) RDVCP = CAP(II)
C	CAPACITANCE IN K ARRAY CURVES USING TEMP OF NODE II
      RETURN
      END
      SUBROUTINE QP (I,TIME,NQCRV,QPI)
      REAL KFAC,MAXDT,KVFAC
      INTEGER CURVE,TPRINT,CTYPE,ATYPE,BTYPE,BARY,UNITS,BB4,CTYBLD
      DIMENSION NBLD(300),NA1(300),NAS(300),NB1(300),CBLD(300),
     1          CTYBLD(300)
      DIMENSION        AA1(50),BB1(50),BB2(50),BB3(50),BB4(50)
      DIMENSION ATYPE(50),BTYPE(50)
      INTEGER TITLE1(14),TITLE2(14),CAPCUR(650),SINCAP,STRCAP
      DIMENSION T(650),C(4000),NA(4000),NB(4000),Q(650)
      DIMENSION NBCNT(650),TP(650),CAP(650),STAB(650),NQ(20),
     1NQPRS(20),TM(100),QT(100)
      DIMENSION NPAIRS(20),CURVE(20),X(100),Y(100)
      COMMON /BLK1/ T,C,NA,NB,Q/BLK2/NPAIRS,X,Y/BLK3/RF,CTYPE,CURVE
      COMMON /BLK4/ TZ,SIGMA,TFAC,TCON,KFAC,KVFAC,FLFAC,DFAC,HFAC
      COMMON /BLK5/ AA1,BB1,BB2,BB3,BB4,ATYPE,BTYPE
      COMMON/BLK6/NBCNT
      COMMON /BLK7/TP,CAP,STAB,CAPCUR,NQ,NQPRS,TM,QT
C	THIS SUBROUTINE RETURNS A HEAT DISSIPATION QPI FOR NODE I
C	AT THIS POINT, TIME DEPENDENT Q REQUIRED
C	M1 IS CURVE NUMBER
C	DETERMINE FIRST/LAST VALUES NP1/NP2 OF I FOR TM(I),QT(I)
      M1 = 0
      NP2 = 0
C	FIND Q CURVE NO. FOR NODE I
      DO 10 J = 1,NQCRV
      IF (NQ(J) .EQ. I) M1 = J
10    CONTINUE
C	IF NO CURVE FOUND, M1 IS STILL 0
      IF (M1 .EQ. 0) GO TO 90
      DO 20 L = 1,M1
20    NP2 = NP2 + NQPRS(L)
      NP1 = NP2 - NQPRS(M1) + 1
      IF (TIME .GT. TM(NP1)) GO TO 30
      QPI = QT(NP1)
      GO TO 100
30    NP1 = NP1 + 1
      DO 60 J = NP1,NP2
      DT = TIME - TM(J)
      IF (DT) 80,40,50
40    QPI = QT(J)
      GO TO 100
50    IF (J .EQ. NP2) GO TO 70
60    CONTINUE
      GO TO 100
70    QPI = QT(NP2)
      GO TO 100
80    QPI = QT(J - 1) + ((QT(J) - QT(J - 1)) / (TM(J) - TM(J
     1     - 1))) * (TIME - TM(J - 1))
      GO TO 100
90    QPI = 0.0
100   CONTINUE
      RETURN
      END
      SUBROUTINE NEGNODE (NCONST,NCND)
C	ASSIGN NEGATIVE TO NODE NA FOR CONSTANT TEMPERATURE NODES
      COMMON/BLK1/T(650),C(4000),NA(4000),NB(4000),Q(650)
      COMMON/BLK11/NCTEMP(50)
      DO 10 I = 1,NCONST
      ICK = NCTEMP(I)
      ICK = IABS(ICK)
      DO 10 J = 1,NCND
      N = IABS(NA(J))
      IF (N .EQ. ICK) NA(J) =  - N
10    CONTINUE
      RETURN
      END
      SUBROUTINE COUNT (ND,NC)
C	THIS SUBROUTINE COUNTS THE NO. OF NB FOR EACH NA
      COMMON /BLK1/ T,C,NA,NB,Q/BLK6/NBCNT
      DIMENSION T(650),C(4000),NA(4000),NB(4000),Q(650),NBCNT(650)
      J1 = 1
      DO 40 I = 1,ND
      NCNT = 0
      DO 20 J = J1,NC
      IF (NA(J) .EQ. NA(J1)) GO TO 10
      GO TO 30
10    NCNT = NCNT + 1
20    CONTINUE
30    NBCNT(I) = NCNT
      J1 = J1 + NCNT
40    CONTINUE
      RETURN
      END
      SUBROUTINE TEMPRT (NN,LCT,RMXDT,MM)
C	THIS SUBROUTINE PRINTS TEMPERATURES
      COMMON/BLK1/T,C,NA,NB,Q
      DIMENSION T(650),C(4000),NA(4000),NB(4000),Q(650)
      IF (NN .LT. 6) GO TO 10
      GO TO 20
10    I1 = 1
      IF (MM .EQ. 3) WRITE (2,100) LCT,RMXDT
      IF (MM .NE. 3) WRITE (2,90) LCT,RMXDT
      WRITE (2,110)
      GO TO (30,40,50,60,70),NN
20    IREM = MOD(NN,6)
      IT = NN - IREM
      I1 = IT + 1
      IF (MM .EQ. 3) WRITE (2,100) LCT,RMXDT
      IF (MM .NE. 3) WRITE (2,90) LCT,RMXDT
      WRITE (2,110)
      WRITE (2,180) (I,T(I),I=1,IT)
      IF (IREM .EQ. 0) GO TO 80
      GO TO (30,40,50,60,70),IREM
30    WRITE (2,130) (I,T(I),I=I1,NN)
      GO TO 80
40    WRITE (2,140) (I,T(I),I=I1,NN)
      GO TO 80
50    WRITE (2,150) (I,T(I),I=I1,NN)
      GO TO 80
60    WRITE (2,160) (I,T(I),I=I1,NN)
      GO TO 80
70    WRITE (2,170) (I,T(I),I=I1,NN)
80    WRITE (2,120)
90    FORMAT(1H0,40X,7HLOOPCT=,I5,10X,6HMAXDT=,E11.4/)
100   FORMAT(1H0,40X,7HLOOPCT=,I5,10X,5HTIME=,E11.4/)
110   FORMAT(1H ,54X,12HTEMPERATURES/)
120   FORMAT(1H0)
130   FORMAT(1H ,4X,2HT(,I3,2H)=,E10.4)
140   FORMAT(1H ,4X,2HT(,I3,2H)=,E10.4,4X,2HT(,I3,2H)=,E10.4)
150   FORMAT(1H ,4X,2HT(,I3,2H)=,E10.4,4X,2HT(,I3,2H)=,E10.4,
     1           4X,2HT(,I3,2H)=,E10.4)
160   FORMAT(1H ,4X,2HT(,I3,2H)=,E10.4,4X,2HT(,I3,2H)=,E10.4,
     1           4X,2HT(,I3,2H)=,E10.4,4X,2HT(,I3,2H)=,E10.4)
170   FORMAT(1H ,4X,2HT(,I3,2H)=,E10.4,4X,2HT(,I3,2H)=,E10.4,
     1           4X,2HT(,I3,2H)=,E10.4,4X,2HT(,I3,2H)=,E10.4,
     2           4X,2HT(,I3,2H)=,E10.4)
180   FORMAT(1H ,4X,2HT(,I3,2H)=,E10.4,4X,2HT(,I3,2H)=,E10.4,
     1           4X,2HT(,I3,2H)=,E10.4,4X,2HT(,I3,2H)=,E10.4,
     2           4X,2HT(,I3,2H)=,E10.4,4X,2HT(,I3,2H)=,E10.4)
      RETURN
      END
CCC I
      SUBROUTINE COND (L2,C,A,B,CON)
C	THIS SUBROUTINE RETURNS A CONDUCTANCE USING K DETERMINED BY LINEAR I  20
C	INTERPOLATION (BY A CALL TO LNINTR).
C	THE NUMBER ORIGINALLY STORED AT C(I) (C,A,OR A/L) IS NOT DISTURBED I  40
      COMMON /BLK2/ NPAIRS,X,Y
      DIMENSION NPAIRS(20),X(100),Y(100)
C	DETERMINE FIRST VALUE NP1 AND LAST VALUE NP2 OF I FOR X(I),Y(I)
      NP2 = 0
      DO 10 L = 1,L2
10    NP2 = NP2 + NPAIRS(L)
      NP1 = NP2 - NPAIRS(L2) + 1
C	DETERMINED AVE TEMP OF NODES A AND B
      XI = 0.5 * (A + B)
      CALL LNINTR (NP1,NP2,XI,YI)
      CON = C * YI
      RETURN
      END
      SUBROUTINE LNINTR (J1,J2,XI,YI)
C	THIS SUBROUTINE PERFORMS A LINEAR INTERPOLATION AT XI TO RETURN YI J  20
C	FIRST X,Y PAIR IS X(J1),Y(J1)
C	LAST  X,Y PAIR IS X(J2),Y(J2)
C	IF  XI LESS THAN OR EQUALS X(J1), SET YI=Y(J1)
C	IF  XI GREATER THAN OR EQUALS X(J2), SET YI=Y(J2)
      COMMON /BLK2/ NPAIRS,X,Y
      DIMENSION NPAIRS(20),X(100),Y(100)
      IF (XI .GT. X(J1)) GO TO 10
      YI = Y(J1)
      GO TO 70
10    J1 = J1 + 1
      DO 40 J = J1,J2
      DX = XI - X(J)
      IF (DX) 60,20,30
20    YI = Y(J)
      GO TO 70
30    IF (J .EQ. J2) GO TO 50
      GO TO 40
40    CONTINUE
      GO TO 70
50    YI = Y(J2)
      GO TO 70
60    YI = Y(J - 1) + ((Y(J) - Y(J - 1)) / (X(J) - X(J - 1))) * (XI
     1     - X(J - 1))
70    RETURN
      END
      SUBROUTINE RCOND (II,NN,A,TRUEC)
C	THIS SUBROUTINE CALCULATES THE RADIATION CONDUCTOR FROM T(I) TO T( K  20
      REAL KFAC,KVFAC,FLFAC
      COMMON /BLK1/ T,C,NA,NB,Q/BLK3/RF,CTYPE,CURVE
      COMMON /BLK4/ TZ,SIGMA,TFAC,TCON,KFAC,KVFAC,FLFAC,DFAC,HFAC
      DIMENSION T(650),C(4000),NA(4000),NB(4000),Q(650),RF(50)
      DIMENSION CTYPE(4000),CURVE(20)
      T1 = T(II) + TZ
      T2 = T(NN) + TZ
      T3 = T1 / 100.0
      T4 = T2 / 100.0
      TRUEC = SIGMA * A * (T3 ** 3 + (T3 ** 2) * T4 + T3 * (T4 ** 2)
     1     + T4 ** 3) / 100.0
      RETURN
      END
      SUBROUTINE CONV (JJ,CNDD,RE,KINV,L)
C	THIS SUBROUTINE CALCULATES CONVECTIVE CONDUCTORS
C	NB(JJ) IS FLUID NODE
      DIMENSION T(650),C(4000),NA(4000),NB(4000),Q(650)
      DIMENSION RF(50),CTYPE(4000),CURVE(20)
      DIMENSION AA1(50),BB1(50),BB2(50),BB3(50),BB4(50)
      DIMENSION ATYPE(50),BTYPE(50)
      INTEGER CTYPE,CURVE,ATYPE,BTYPE,BBTEST,AATEST,BB4
      REAL L,KINV,KA
      COMMON /BLK1/ T,C,NA,NB,Q/BLK4/TZ,SIGMA,TFAC,TCON,KFAC,KVFAC,
     1       FLFAC,DFAC,HFAC/BLK3/RF,CTYPE,CURVE/BLK5/AA1,BB1,BB2,
     2       BB3,BB4,ATYPE,BTYPE
C	NEG(SIGN) NB(JJ) MAINTAINS NB AS AIR NODE
      IF (NB(JJ)) 10,10,20
10    N1 = IABS(NA(JJ))
      N2 = IABS(NB(JJ))
      GO TO 30
20    N1 = IABS(NB(JJ))
      N2 = IABS(NA(JJ))
30    TAVE = 0.5 * (T(N1) + T(N2))
      IF (CTYPE(JJ) .LT. 201) GO TO 170
      IF (CTYPE(JJ) .GT. 300) GO TO 140
      BBTEST = CTYPE(JJ) - 200
      VEL = BB1(BBTEST)
      D = BB2(BBTEST)
      NBT = BTYPE(BBTEST)
      GO TO (40,50,60,100,60,100),NBT
C	LAMINAR FLOW - DUCT
40    L = BB3(BBTEST)
      CALL KAIR (T(N2),KA)
      CALL PRAIR (T(N2),PRDT)
      CALL KV (T(N2),KINV)
      RE = VEL * D / KINV
      CALL LAMSD (PRDT,RE,D,L,KA,T(N2),T(N1),H)
      GO TO 180
C	TURBULENT FLOW IN A DUCT
50    CALL KAIR (T(N2),KA)
      CALL KV (T(N2),KINV)
      CALL PRAIR (T(N2),PRDT)
C	H FOR FULLY DEVELOPED FLOW
      L = BB3(BBTEST)
      V = BB1(BBTEST)
      D = BB2(BBTEST)
      RE = V * D / KINV
      CALL TURBD (KA,KINV,VEL,T(N2),T(N1),D,HD)
C	SHORT DUCT CORRECTION
C	T.C.E.E., E2.39
      IF (L / D .GT.20.) H = HD * (1.0 + 6.0 * D / L)
C	T.C.E.E., E2.38
      IF (L / D .EQ.20.
     1     .OR. L / D .LT.20.) H = HD * (1.0 + 1.68 * ((D / L) ** 0.58))
      GO TO 180
C	LAMINAR FLOW OVER FLAT PLATE
60    CALL KAIR (TAVE,KA)
      CALL KV (TAVE,KINV)
      CALL PRAIR (TAVE,PRDT)
      IF (NBT .EQ. 5) GO TO 70
C	H AVERAGED OVER L. T.C.E.E., E2.20, E2.21, E2.22
      L = BB3(BBTEST)
      RE = VEL * L / KINV
      H = 0.664 * KA * (SQRT(RE)) * (PRDT ** 0.33) / L
      GO TO 180
C	H LOCAL. T.C.E.E., EQ.20
C	NST IS FIRST UPSTREAM NODE NO. OF PLATE CONTAINING NODE NO. NA
70    NST = BB4(BBTEST)
      DX = BB3(BBTEST)
C	RESET OF N1,N2
      IF (NA(JJ) .LT. 0) GO TO 80
      N1 = IABS(NA(JJ))
      N2 = IABS(NB(JJ))
      GO TO 90
80    N1 = IABS(NB(JJ))
      N2 = IABS(NA(JJ))
90    RNST = NST
      RN1 = N1
      X = (RN1 - RNST + 0.5) * DX
      L = X
      RE = VEL * X / KINV
      H = 0.332 * KA * (SQRT(RE)) * (PRDT ** 0.33) / X
      GO TO 180
C	TURBULENT FLOW OVER A FLAT PLATE
100   CALL KAIR (TAVE,KA)
      CALL KV (TAVE,KINV)
      CALL PRAIR (TAVE,PRDT)
      IF (NBT .EQ. 6) GO TO 110
      L = BB3(BBTEST)
C	H AVERAGED OVER L. T.C.E.E., TABLE 10-5
      RE = VEL * L / KINV
      H = 0.036 * KA * (PRDT ** 0.33) * (RE ** 0.8) / L
      GO TO 180
C	H LOCAL
110   NST = BB4(BBTEST)
      DX = BB3(BBTEST)
C	RESET OF N1,N2
      IF (NA(JJ) .LT. 0) GO TO 120
      N1 = IABS(NA(JJ))
      N2 = IABS(NB(JJ))
      GO TO 130
120   N1 = IABS(NB(JJ))
      N2 = IABS(NA(JJ))
130   RNST = NST
      RN1 = N1
      X = (RN1 - RNST + 0.5) * DX
      L = X
C	H LOCAL. T.C.E.E, TABLE 10-5
      RE = VEL * X / KINV
      H = 0.0288 * KA * (PRDT ** 0.3333) * (RE ** 0.8) / X
      GO TO 180
C	NST IF FIRST UPSTREAM NODE NO. OF PLATE CONTAINING NO. NA
C	FLUID NODES
140   IF (CTYPE(JJ) .GT. 400) CALL PRESS (JJ,CNDD)
      IF (CTYPE(JJ) .GT. 400) GO TO 190
      IF (CTYPE(JJ) .GT. 310) GO TO 150
      CALL RHOCPA (TAVE,RHOCP)
C	FLUID OTHER THAN AIR - RHOCP IN ARRAY -
C	     UNITS=0 - BTU/CUFT DEG F
C	     UNITS=1 - CAL/CUCM DEG C
C	     UNITS=2 = CAL/CUCM DEG C
C	                     - G IN COND. INPUT -
C	     UNITS=0 - CUFT/MIN
C	     UNITS=1 - CUCM/SEC
C	     UNITS=2 - CUFT/MIN
      GO TO 160
150   LIM1 = CTYPE(JJ)
      LIM1 = LIM1 - 310
      CALL COND (CURVE(LIM1),1.0,T(N1),T(N2),RHOCP)
C	REMOVE 62.43 FROM FLFAC FOR UNITS=1,2
C	EXACT NO. TO COMPARE WITH FLFAC IS 60.0, USE 50.0
      COR = 1.0
      IF (FLFAC .LT. 50.0) COR = 62.43
      RHOCP = RHOCP * COR
C	C(I) IS MASS FLOW RATE CUFT/MIN OR CUCM/SEC
160   H = RHOCP * FLFAC
      GO TO 180
C	NATURAL CONVECTION
170   AATEST = CTYPE(JJ) - 100
      L = AA1(AATEST)
      NAT = ATYPE(AATEST)
      CALL FREECV (TAVE,N1,N2,L,NAT,H)
180   CNDD = H * C(JJ)
190   CONTINUE
      RETURN
      END
CCC M
      SUBROUTINE SMDEV (NAT,T1,T2,P,H)
C	THIS SUBROUTINE CALCULATES THE NATURAL CONVECTION H FOR
C	ANY ORIENTATION OF A SMALL DEVICE
C	THE FORMULA IS BASED ON EXPERIMENT, T.C.E.E., E2.14
      REAL KFAC,KVFAC
      COMMON/BLK4/TZ,SIGMA,TFAC,TCON,KFAC,KVFAC,FLFAC,DFAC,HFAC
C	H UNITS ARE BTU/(HR-FTSQ-DEG F) FOR TFAC,LFAC,HFAC ALL 1.0
      DT = (T1 - T2) * TFAC/1.8
      IF (DT .EQ. 0.0) DT = 0.0001 * T1
      DT = ABS(DT)
      PP = P * DFAC * 12.0
      IF(NAT.EQ.6) H=((DT/PP)**0.35)*0.0022*1761.0/(2.54**2)
      IF(NAT.EQ.7) H=((DT/PP)**0.33)*0.0018*1761.0/(2.54**2)
      IF(NAT.EQ.8) H=((DT/PP)**0.33)*0.0009*1761.0/(2.54**2)
      H = H * HFAC
      RETURN
      END
      SUBROUTINE LAMSD (PR,RED,D,L,K,TB,TS,H)
C	THIS SUBROUTINE CALCULATES THE HEAT TRANSFER COEFFICIENT FOR AIR
C	FOR LAMINAR FLOW IN A DUCT USING T.C.E.E., E2.34
C	AND CORRECTION OF T.C.E.E. REF. 7, EQN. 8-29.
C	EVALUATE PHYSICAL PROP. AT BULK MEAN TEMP
C	REFERENCE TEMP - BULK MEAN TEMP
      REAL K,L,KFAC,KVFAC
      COMMON /BLK4/ TZ,SIGMA,TFAC,TCON,KFAC,KVFAC,FLFAC,DFAC,HFAC
      T1 = TS * TFAC + TCON
      T2 = TB * TFAC + TCON
      TC = (T2 + 460.0) / (T1 + 460.0)
      IF (T1 - T2) 10,10,20
C	GAS COOLING IN A TUBE
10    TCEXP = 0.08
      GO TO 30
C	GAS HEATING IN A TUBE
20    TCEXP = 0.25
30    TC = TC ** TCEXP
      X = (RED * PR * D / L)
      Y = 3.66 + (0.104*X)/(1.0 + 0.016*X**0.8)
50    H = Y * K * TC / D
      RETURN
      END
      SUBROUTINE TURBD (KA,KINV,VEL,TB,TS,DIA,H)
C	THIS SUBROUTINE CALCULATES THE HEAT TRANSFER COEFFICIENT
C	FOR FULLY DEVELOPED TURBULENT FLOW IN A DUCT. T.C.E.E., E2.37.
      COMMON /BLK4/ TZ,SIGMA,TFAC,TCON,KFAC,KVFAC,FLFAC,DFAC,HFAC
      REAL KA,KINV,KFAC,KVFAC
      T1 = TS * TFAC + TCON
      T2 = TB * TFAC + TCON
      TC = (T2 + 460.0) / (T1 + 460.0)
      IF (T1 - T2) 10,10,20
C	GAS COOLING IN A TUBE
10    TCEXP = 0.15
      GO TO 30
C	GAS HEATING IN A TUBE
20    TCEXP = 0.575
30    TC = TC ** TCEXP
      D = DIA
      RE = VEL * D / KINV
      H = TC * 0.023 * (RE ** 0.8) * KA / D
      RETURN
      END
CCCP
      SUBROUTINE KAIR (X,Y)
C	THIS SUBROUTINE CALCULATES THE THERMAL CONDUCTIVITY OF AIR
C	BETWEEN 0 DEG F AND 1000 DEG F
      REAL KFAC,KVFAC
      COMMON /BLK4/ TZ,SIGMA,TFAC,TCON,KFAC,KVFAC,FLFAC,DFAC,HFAC
C	X-DEG F,TFAC=1,TCON=0
C	X=DEGC,TFAC=9/5,TCON=32
      T = TFAC * X + TCON
      Y = 1.332594267E - 02 + (1.981727295E - 09 * T + 2.061105698E
     1     - 05) * T
      Y = Y * KFAC
      RETURN
      END
      SUBROUTINE KV (X,Y)
C	THIS SUBROUTINE CALCULATES THE KINEMATIC VOSCOSITY OF AIR
C	FOR TEMPERATURES BETWEEN 0 DEG F AND 1000 DEG F
      REAL KFAC,KVFAC
      COMMON /BLK4/ TZ,SIGMA,TFAC,TCON,KFAC,KVFAC,FLFAC,DFAC,HFAC
C	X-DEG F,TFC=1,TCON=0
C	X-DEG C,TFAC=9/5,TCON=32
      T = TFAC * X + TCON
      Y = 0.1271812987 + (2.717815575E - 07 * T + 5.195566004E - 04) * T 
      EX = 1.0E - 03
      Y = Y * EX
      Y = KVFAC * Y
      RETURN
      END
      SUBROUTINE PRAIR (X,Y)
C	THIS SUBROUTINE CALCULATES THE PRANDTL NUMBER Y
C	OF AIR FOR TEMPERATURES FROM 0 DEG F TO 1000 DEG F
      COMMON /BLK4/ TZ,SIGMA,TFAC,TCON,KFAC,KVFAC,FLFAC,DFAC,HFAC
C	X-DEG F ,TFAC=1,TCON=0
C	X-DEG C ,TFAC=9/5,TCON=32
      T = TFAC * X + TCON
      Y = 0.728316847 + ((0.1352944828E - 10 * T - 7.337277187E
     1     - 08) * T - 7.312221844E - 05) * T
      RETURN
      END
      SUBROUTINE GRAS (L,TAVE,TS,TB,GR)
C	THIS SUBROUTINE CALCULATES THE GRASHOF NO. FOR AIR
      COMMON /BLK4/ TZ,SIGMA,TFAC,TCON,KFAC,KVFAC,FLFAC,DFAC,HFAC
      REAL L
      T = TAVE * TFAC + TCON
      Y1 = 6.621367986 + (( - 9.699265237E - 10 * T + 2.736451029E
     1     - 06) * T - 3.968288304E - 03) * T
      Y = 10.0 ** Y1
      X = L * DFAC
      TDIF = TS - TB
      TDIF = ABS(TDIF)
      IF (TDIF .EQ. 0.0) TDIF = TDIF + 0.001 * TS
      GR = Y * (X ** 3) * (TDIF) * TFAC
      RETURN
      END
      SUBROUTINE RHOCPA (X,Y)
C	THIS SUBROUTINE CALCULATES THE PRODUCT OF DENSITY AND
C	SPECIFIC HEAT(CONST PRESS) FOR AIR
C	FOR T DEG F, TCON=0.0, TFAC=1.0, Y=BTU/CUFT-DEG F
      COMMON /BLK4/ TZ,SIGMA,TFAC,TCON,KFAC,KVFAC,FLFAC,DFAC,HFAC
      REAL KFAC,KVFAC
      T = TFAC * X + TCON
      Y = 2.048207889E - 02 + (( - 1.69669411E - 11 * T
     1     + 4.015439168E - 08) * T - 3.667583513E - 05) * T
      RETURN
      END
      SUBROUTINE FREECV (TAVE,N1,N2,L,NAT,HTCOEF)
C	THIS SUBROUTINE CALCULATES NATURAL CONVECTION
C	HEAT TRANSFER COEFFICIENTS
      REAL L,KA
      COMMON /BLK1/ T,C,NA,NB,Q
      DIMENSION T(650),C(4000),NA(4000),NB(4000),Q(650)
      CALL PRAIR (TAVE,PR)
      CALL GRAS (L,TAVE,T(N1),T(N2),GR)
      CALL KAIR (TAVE,KA)
      PROD = PR * GR
      GO TO (10,30,50,60,110,150,150,150),NAT
C	VERTICAL FLAT PLATE OR CYLINDER
10    IF (PROD .GT. 1.0E09) GO TO 20
C	T.C.E.E., E2.7, TABLE 2-2 .
      HTCOEF = (KA / L) * 0.590 * ((PROD) ** 0.25)
      GO TO 170
20    HTCOEF = (KA / L) * 0.130 * ((PROD) ** 0.33)
      GO TO 170
C	HORIZONTAL FLAT PLATE OR CYLINDER,
C	HEATED SIDE FACING UP, COOLED SIDE FACING DOWN
30    IF (GR .GT. 8.0E06) GO TO 40
      HTCOEF = (KA / L) * 0.54 * ((PROD) ** 0.25)
      GO TO 170
40    HTCOEF = (KA / L) * 0.15 * ((PROD) ** 0.33)
      GO TO 170
C	HORIZONTAL FLAT PLATE OR CYLINDER
C	HEATED SIDE FACING DOWN, COOLED SIDE FACING UP
50    HTCOEF = (KA / L) * 0.27 * ((PROD) ** 0.25)
      GO TO 170
C	PARALLEL HORIZONTAL PLATES. SEE T.C.E.E., TABLE 10-4.
C	GR MODIFIED BY FACTOR OF 2.0 TO APPROX. ACCOUNT FOR
C	NODE BETWEEN PLATES SPLITTING DT
60    GR = GR * 2.0
      IF (GR .GT. 1.58E3) GO TO 70
      PROD = 1.0
      GO TO 100
70    IF (GR .GT. 5.62E4) GO TO 80
      PROD = 0.0731 * GR ** 0.355
      GO TO 100
80    IF (GR .GT. 2.0E5) GO TO 90
      PROD = 3.63
      GO TO 100
90    PROD = 0.0426 * GR ** 0.37
C	HTCOEF ALSO MODIFIED BY 2.0
100   HTCOEF = 2.0 * (KA / L) * PROD
      GO TO 170
C	PARALLEL VERTICAL PLATES.
110   GR = GR * 2.0
      IF (GR .GT. 6.03) GO TO 120
      PROD = 1.0
      GO TO 160
120   IF ( GR .GT. 5.62E4) GO TO 130
      PROD = 0.0305 * GR ** 0.402
      GO TO 160
130   IF (GR .GT. 2.055) GO TO 140
      PROD = 2.455
      GO TO 160
140   PROD = 0.0263 * GR ** 0.38
      GO TO 160
150   CALL SMDEV (NAT,T(N1),T(N2),L,HTCOEF)
      GO TO 170
160   HTCOEF = 2.0 * (KA / L) * PROD
170   RETURN
      END
      SUBROUTINE NSCAN (NCND,IRCNT)
C	MULTI-SURFACE RADIATION EXCHANGE ROUNTINE
C	SCAN CTYPE FOR -2, FILL IF, JF, AM MATRI
      COMMON /BLK1/T(650),C(4000),NA(4000),NB(4000),Q(650)
      COMMON /BLK3/RF(50),CTYPE(4000),CURVE(20)
      COMMON /BLK9/IF(2500),JF(2500),AM(50,50)
      INTEGER CTYPE,CURVE
C	PLACE F*A FROM C(K) INTO AM MATRI
      J = 1
      I = 1
      II = 1
      DO 10 K = 1,NCND
      IF (CTYPE(K) .NE.   - 2) GO TO 10
      IF(II) = IABS(NA(K))
      JF(II) = IABS(NB(K))
      AM(I,J) = C(K)
      J = J + 1
      II = II + 1
C	IF J=IRCNT + 1 GO TO FIRST ELEMENT, NEXT ROW IN AM
      IF (J .EQ. IRCNT + 1) I = I + 1
      IF (J .EQ. IRCNT + 1) J = 1
10    CONTINUE
C	ARRANGE ELEMENTS OF EACH AM ROW IN ASCENDING ORDER OF NODE NO.
      DO 40 I = 1,IRCNT
      J2 = IRCNT - 1
      DO 30 J = 1,J2
      K = (I - 1) * IRCNT + J
      L1 = J + 1
      DO 20 L = L1,IRCNT
      M = (I - 1) * IRCNT + L
      IF (JF(M) .GT. JF(K)) GO TO 20
      ASAVE = AM(I,J)
      AM(I,J) = AM(I,L)
      AM(I,L) = ASAVE
      JSAVE = JF(K)
      JF(K) = JF(M)
      JF(M) = JSAVE
20    CONTINUE
30    CONTINUE
40    CONTINUE
      RETURN
      END
      SUBROUTINE AADJ (IRCNT)
C	MULTI-SURFACE RADIATION EXCHANGE ROUTINE
C	CHANGE AM ELEMENTS FROM F*A TO TRUE AM VALUES
C	AM IS MATRIX DEFINED FOLLOWING T.C.E.E., E3.15.
      COMMON/BLK9/IF(2500),JF(2500),AM(50,50)
      J = 1
      DO 20 L = 1,IRCNT
      N = IF(J)
      CALL AESRCH (N,IRCNT,AREA,EMIS)
      FAC = (1.0 - EMIS) / AREA
      DO 10 K = 1,IRCNT
      RKD = 0.0
      IF (L .EQ. K) RKD = 1.0
      AM(L,K) = RKD - FAC * AM(L,K)
10    CONTINUE
      J = L * IRCNT + 1
20    CONTINUE
      RETURN
      END
      SUBROUTINE AESRCH (N,IRCNT,AREA,EMIS)
C	MULTI-SURFACE RADIATION EXCHANGE ROUTINE
C	SEARCH AND RETURN AREA, EMIS FOR NODE N
      COMMON/BLK8/IAE(50),EM(50),AR(50)
      ITEST = 0
      DO 10 I = 1,IRCNT
      IF (IAE(I) .NE. N) GO TO 10
      ITEST = 1
      AREA = AR(I)
      EMIS = EM(I)
      GO TO 20
10    CONTINUE
      IF (ITEST .EQ. 0) EMIS = 99.0
20    RETURN
      END
      SUBROUTINE INVAM (IRCNT)
C	MULTI-SURFACE RADIATION EXCHANGE ROUTINE
C	INVERT AM MATRIX
      COMMON/BLK9/IF(2500),JF(2500),AM(50,50)
      DIMENSION JC(50),VV(2)
      LLTEST = 0
      VV(1) = 1.0
      CALL MATINV (AM,50,50,IRCNT,IRCNT,LLTEST,JC,VV)
      IF (LLTEST .NE. 1) GO TO 20
      WRITE (2,10)
      STOP
10    FORMAT(22H MATRIX SOLUTION ERROR)
20    RETURN
      END
      SUBROUTINE SETBM (IRCNT)
C	MULTI-SURFACE RADIATION EXCHANGE ROUTINE
C	SET UP BM MATRIX (EMIS*T**4*SIGMA)
C	BM IS MATRIX DEFINED FOLLOWING T.C.E.E, E3.15.
      COMMON/BLK4/TZ,SIGMA,TFAC,TCON,KFAC,KVFAC,FLFAC,DFAC,HFAC
      COMMON/BLK9/IF(2500),JF(2500),AM(50,50)
      COMMON/BLK1/T(650),C(4000),NA(4000),NB(4000),Q(650)
      COMMON/BLK10/BM(50),RJM(50)
      REAL KFAC,KVFAC
      DO 10 I = 1,IRCNT
C	FIND NODE NO. CORRESPONDING TO I IN FIRST NSURFS NUMBER OF JF
      NN = JF(I)
      CALL AESRCH (NN,IRCNT,AREA,EMIS)
      BM(I) = SIGMA * EMIS * ((T(NN) + TZ) ** 4) * 1.0E - 8
10    CONTINUE
      RETURN
      END
      SUBROUTINE RADIOS (IRCNT)
C	MULTI-SURFACE RADIATION EXCHANGE ROUNTINE
C	SOLVE FOR RADIOSITY MATRIX
      COMMON/BLK9/IF(2500),JF(2500),AM(50,50)
      COMMON/BLK10/BM(50),RJM(50)
      REAL JSUM
      DO 20 I = 1,IRCNT
      JSUM = 0.0
      DO 10 J = 1,IRCNT
      JSUM = AM(I,J) * BM(J) + JSUM
10    CONTINUE
      RJM(I) = JSUM
20    CONTINUE
      RETURN
      END
CCCAB      
      SUBROUTINE REX (N1,N2,IRCNT,FA,COND)
C	MULTI-SURFACE RADIATION EXCHANGE ROUTINE
C	CALCULATE CONDUCTANCE FOR MULTIPLE SURFACE RADIATION EXCHANGE
C	CONDUCTANCE IS T.C.E.E., E3.15.
      COMMON/BLK9/IF(2500),JF(2500),AM(50,50)
      COMMON/BLK1/T(650),C(4000),NA(4000),NB(4000),Q(650)
      COMMON/BLK10/BM(50),RJM(50)
      T2 = T(N2)
      T1 = T(N1)
      TDIF = T1 - T2
      IF (TDIF .EQ. 0.0) TDIF = TDIF + 0.0001 * T1
C	GET RADIOSITIES J1,J2
      DO 10 I = 1,IRCNT
      IF (N1 .EQ. JF(I)) RJ1 = RJM(I)
      IF (N2 .EQ. JF(I)) RJ2 = RJM(I)
10    CONTINUE
      COND = FA * (RJ1 - RJ2) / TDIF
      RETURN
      END
      SUBROUTINE MATINV (A,NC,NR,N,MC,LTEST,JC,V)
C	MATRIX INVERSION ROUTINE
      DIMENSION A(NR,NC),JC(50),V(2)
      IW = V(1)
      M = 1
      S = 1.
      L = N + (MC - N) * (IW / 4)
      KD = 2 - MOD(IW / 2,2)
      IF (KD .EQ. 1) V(2) = 0.
      KI = 2 - MOD(IW,2)
      GO TO (10,30),KI
C	INITIALIZE JC FOR INVERSION
10    DO 20 I = 1,N
20    JC(I) = I
C	SEARCH FOR PIVOT ROW
30    DO 160 I = 1,N
      GO TO (50,40),KI
40    M = I
50    IF (I .EQ. N) GO TO 100
      X =  - 1.
      DO 60 J = I,N
      IF (X .GT. ABS(A(J,I))) GO TO 60
      X = ABS(A(J,I))
      K = J
60    CONTINUE
      IF (K .EQ. I) GO TO 100
      S =  - S
      V(1) =  - V(1)
      GO TO (70,80),KI
70    MU = JC(I)
      JC(I) = JC(K)
      JC(K) = MU
C	INTERCHANGE ROW I AND ROW K
80    DO 90 J = M,L
      X = A(I,J)
      A(I,J) = A(K,J)
90    A(K,J) = X
C	TEST FOR SINGULARITY
100   IF (ABS(A(I,I)) .GT. 0.) GO TO 110
C	MATRIX IS SINGULAR
      IF (KD .EQ. 1) V(1) = 0.
      JC(1) = I - 1
      LTEST = 1
      RETURN
110   GO TO (120,130),KD
C	COMPUTE THE DETERMINANT
120   IF (A(I,I) .LT. 0.) S =  - S
      V(2) = V(2) + ALOG(ABS(A(I,I)))
130   X = A(I,I)
      A(I,I) = 1.
C	REDUCTION OF THE I-TH ROW
      DO 140 J = M,L
      A(I,J) = A(I,J) / X
140   CONTINUE
C	REDUCTION OF ALL REMAINING ROWS
      DO 160 K = 1,N
      IF (K .EQ. I) GO TO 160
      X = A(K,I)
      A(K,I) = 0.
      DO 150 J = M,L
      A(K,J) = A(K,J) - X * A(I,J)
150   CONTINUE
160   CONTINUE
C	AX=B AND DET.(A) ARE NOW COMPUTED
      GO TO (170,220),KI
C	PERMUTATION OF THE COLUMNS FOR MATRIX INVERSION
170   DO 210 J = 1,N
      IF (JC(J) .EQ. J) GO TO 210
      JJ = J + 1
      DO 180 I = JJ,N
      IF (JC(I) .EQ. J) GO TO 190
180   CONTINUE
190   JC(I) = JC(J)
      DO 200 K = 1,N
      X = A(K,I)
      A(K,I) = A(K,J)
200   A(K,J) = X
210   CONTINUE
220   JC(1) = N
      IF (KD .EQ. 1) V(1) = S
      RETURN
      END
      SUBROUTINE NDET (IRADFLG,IRCNT,NCND,LCT,RMXDT,MODE)
C	THIS SUBROUTINE PRINTS NODE AND CONDUCTOR DETAILS
      REAL L
      INTEGER CTYPE,BBTEST,AATEST,ATYPE,BTYPE,BB4,CURVE
      COMMON /BLK1/ T,C,NA,NB,Q/BLK3/RF,CTYPE,CURVE/BLK5/AA1,BB1,BB2,
     1       BB3,BB4,ATYPE,BTYPE
      COMMON/BLK7/TP(650),CAP(650),STAB(650),CAPCUR(650),NQ(20),
     1NQPRS(20),TM(100),QT(100)
      DIMENSION T(650),C(4000),NA(4000),NB(4000),Q(650),RF(50),AA1(50),
     1       BB1(50),BB2(50),BB3(50),BB4(50),CTYPE(4000),CURVE(20),
     2       ATYPE(50),BTYPE(50)
      COMMON/BLK8/IAE(50),EM(50),AR(50)
      F(NAARG,NBARG) = T(NAARG) - T(NBARG) * CND
      WRITE (2,170) LCT,RMXDT
      NTEST = 0
      SUM2 = 0.0
      DO 160 I = 1,NCND
      IF (NA(I) .EQ. NTEST) GO TO 20
      SUM = 0.0
      NTEST = NA(I)
      NNA = IABS(NA(I))
      NNB = IABS(NB(I))
      CALL CAPC (NNA,RDVCP)
      WRITE (2,180) NA(I),T(NNA),Q(NNA),STAB(NNA),RDVCP
      IF (NA(I) .LT. 0) WRITE (2,190)
      IF (IRADFLG .EQ. 0) GO TO 10
      CALL AESRCH (NNA,IRCNT,AREA,EMIS)
      IF (EMIS .GT. 2.0) GO TO 10
      WRITE (2,210) AREA,EMIS
10    WRITE (2,200)
20    NNA = IABS(NA(I))
      NNB = IABS(NB(I))
      IF (CTYPE(I)) 40,30,50
30    CND = C(I)
      GO TO 90
C	RADIATION COND
40    IF (CTYPE(I) .EQ.  - 2) CALL REX (NNA,NNB,IRCNT,C(I),CND)
      IF (CTYPE(I) .EQ.  - 1) CALL RCOND (NNA,NNB,C(I),CND)
      GO TO 90
50    IF (CTYPE(I) .GT. 100) GO TO 60
      LIM1 = CTYPE(I)
      CALL COND (CURVE(LIM1),C(I),T(NNA),T(NNB),CND)
      GO TO 90
60    CALL CONV (I,CND,RE,RKINV,L)
      IF (CTYPE(I) .LT. 201 .OR. CTYPE(I) .GT. 300) GO TO 90
      BBTEST = CTYPE(I) - 200
      NBT = BTYPE(BBTEST)
      GO TO (70,80,70,80,70,80),NBT
C	BOUNDARY LAYER THICKNESS FOR LAMINAR FLOW. T.C.E.E., E2.24.
70    V = BB1(BBTEST)
      DEL = 5.0 * L / SQRT(V * L / RKINV)
      GO TO 90
C	BOUNDARY LAYER THICKNESS FOR TURBULENT FLOW. T.C.E.E., E2.26.
80    V = BB1(BBTEST)
      DEL = 0.376 * L / ((V * L / RKINV) ** 0.2)
90    FLUX = F(NNA,NNB)
      SUM = SUM + FLUX
      IF (C(I) .EQ. 0.0) GO TO 150
      H = CND / C(I)
      IF (CTYPE(I) .EQ. 0 .OR. CTYPE(I) .GT. 0) GO TO 100
      WRITE (2,220) NB(I),CTYPE(I),C(I),CND,FLUX,H
      GO TO 150
100   IF (CTYPE(I) .GT. 0) GO TO 110
C	CONSTANT CONDUCTOR
      IF (C(I) .EQ. 0.0) GO TO 150
      WRITE (2,230) NB(I),CTYPE(I),C(I),CND,FLUX
      GO TO 150
110   IF (CTYPE(I) .GT. 100) GO TO 120
C	TEMP DEPENDENT COND
      IF (C(I) .EQ. 0.0) GO TO 150
      WRITE (2,240) NB(I),CTYPE(I),C(I),CND,FLUX
      GO TO 150
120   IF (CTYPE(I) .GT. 200) GO TO 130
C	NATURAL CONVECTION COND
      AATEST = CTYPE(I) - 100
      NAT = ATYPE(AATEST)
      WRITE (2,250) NB(I),CTYPE(I),NAT,C(I),CND,FLUX,H
      GO TO 150
130   IF (CTYPE(I) .GT. 300) GO TO 140
C	FORCED CONVECTION COND
      IF (C(I) .EQ. 0.0) GO TO 150
      WRITE (2,260) NB(I),CTYPE(I),NBT,C(I),CND,FLUX,RE,DEL,BB2(BBTEST),
     1H
      GO TO 150
C	FLUID CONDUCTOR
140   IF (C(I) .EQ. 0.0 .AND. CTYPE(I) .LT. 401) GO TO 150
      WRITE (2,270) NB(I),CTYPE(I),C(I),CND,FLUX
150   II = I + 1
      IF (NA(I) .EQ. NA(II)) GO TO 160
      WRITE (2,280) SUM
      IF (NA(I) .LT. 0) GO TO 160
      SUM2 = SUM2 + SUM - Q(NNA)
160   CONTINUE
      WRITE (2,290) SUM2
      RETURN
C
170   FORMAT (1H0,40X,7HLOOPCT=,I5,10X,6HMAXDT=,E11.4/)
180   FORMAT (1H0,4X,14HDETAIL OF NODE,I4,5X,12HTEMPERATURE=,E10.4,5X,
     1     6HPOWER=,E10.4,5X,20HSTABILITY CONSTANT =,E10.2,5X,4HCAP=,
     2  E10.4)
190   FORMAT(1H0,27X,35HTHIS IS A CONSTANT TEMPERATURE NODE)
200   FORMAT(1H0,6X,4HNODE,2X,5HCTYPE,2X,5HCMODE,7X,1HC,
     1       7X,11HCONDUCTANCE,8X,4HFLUX,8X,8HREYN NO.,3X,
     2       11HBNDRY LAYER,5X,8HHYDR DIA,4X,13HHT TRANS COEF)
210   FORMAT(1H0,27X,38HMULTI-SURFACE RADIATION EXCHANGE AREA=,
     1     E10.4,6X,11HEMISSIVITY=,F5.3)
220   FORMAT(1H ,6X,I4,2X,I4,9X,E10.4,4X,E10.4,4X,E10.4,46X,E10.4)
230   FORMAT (1H ,6X,I4,2X,I4,9X,E10.4,4X,E10.4,4X,E10.4)
240   FORMAT (1H ,6X,I4,2X,I4,9X,E10.4,4X,E10.4,4X,E10.4)
250   FORMAT (1H ,6X,I4,2X,I4,3X,I3,3X,E10.4,4X,E10.4,4X,E10.4,46X,
     1       E10.4)
260   FORMAT (1H ,6X,I4,2X,I4,3X,I3,3X,E10.4,4X,E10.4,4X,E10.4,4X,E10.4,
     1       4X,E10.4,4X,E10.4,4X,E10.4)
270   FORMAT (1H ,6X,I4,2X,I4,9X,E10.4,4X,E10.4,4X,E10.4)
280   FORMAT (1H ,42X,11HNET TOTAL = ,E10.4)
290   FORMAT (1H+,76X,16HENERGY BALANCE =,E10.4/)
      END
      SUBROUTINE BAL (NCND,IRCNT)
C	THIS SUBROUTINE DETERMINES THE TOTAL SYSTEM ENERGY
      REAL L
C      INTEGER CTYPE,ATYPE,BTYPE,BB4,CURVE
      INTEGER CTYPE,ATYPE,BTYPE,BB4
      COMMON/BLK1/T,C,NA,NB,Q/BLK3/RF,CTYPE,CURVE/BLK5/AA1,BB1,BB2,
     1   BB3,BB4,ATYPE,BTYPE
      DIMENSION T(650),C(4000),NA(4000),NB(4000),Q(650),RF(50),AA1(50),
     1   BB1(50),BB2(50),BB3(50),BB4(50),CTYPE(4000),CURVE(20),
     2   ATYPE(50),BTYPE(50)
      F(NAARG,NBARG) = (T(NAARG) - T(NBARG)) * CND
      NTEST = 0
      SUM2 = 0.0
      DO 70 I = 1,NCND
      IF (NA(I) .EQ. NTEST) GO TO 10
      SUM = 0.0
      DUMMY = 1.0
      RE = DUMMY
      RKINV = DUMMY
      NTEST = NA(I)
10    NNA = IABS(NA(I))
      NNB = IABS(NB(I))
      IF (CTYPE(I)) 30,20,40
20    CND = C(I)
      GO TO 60
30    IF (CTYPE(I) .EQ.  - 1) CALL RCOND (NNA,NNB,C(I),CND)
      IF (CTYPE(I) .EQ.  - 2) CALL REX (NNA,NNB,IRCNT,C(I),CND)
      GO TO 60
40    IF (CTYPE(I) .GT. 100) GO TO 50
      LIM1 = CTYPE(I)
      CALL COND (CURVE(LIM1),C(I),T(NNA),T(NNB),CND)
      GO TO 60
50    CALL CONV (I,CND,RE,RKINV,L)
60    FLUX = F(NNA,NNB)
      SUM = SUM + FLUX
      II = I + 1
      IF (NA(I) .EQ. NA(II) .OR. NA(I) .LT. 0) GO TO 70
      SUM2 = SUM2 + SUM - Q(NNA)
70    CONTINUE
      WRITE (2,80) SUM2
      RETURN
80    FORMAT(1H0,36X,16HENERGY BALANCE =,E10.4/)
      END
      SUBROUTINE FLOW (NCND,UU0)
C	THIS SUBROUTINE CALCULATES VELOCIT
C	FROM THE POTENTIAL NETWORK
C	T.C.E.E., SECTION 6.7.
      INTEGER CTYPE,CURVE
      DIMENSION T(650),C(4000),NA(4000),NB(4000),Q(650),CTYPE(4000)
     1 ,RF(50),CURVE(20)
      COMMON /BLK1/T,C,NA,NB,Q/BLK3/RF,CTYPE,CURVE
      VX = 0.0
      VY = 0.0
      WRITE (2,80)
      WRITE (2,70) UU0
      DO 50 I = 1,NCND
      NNA = IABS(NA(I))
      NNB = IABS(NB(I))
      VEL =  - (T(NNB) - T(NNA)) * SQRT(C(I))
      IF (VEL .LT. 0.0) GO TO 20
      IF (CTYPE(I) .EQ. 0) GO TO 10
      VY = VEL
      GO TO 20
10    VX = VEL
20    II = I + 1
      IF (NA(I) .EQ. NA(II)) GO TO 50
      IF (VX .EQ. 0.0) GO TO 30
      THETA = ATAN2(VY,VX)
      THETA = THETA * 180.0 / 3.141592654
      GO TO 40
30    THETA = 90.0
40    V = SQRT(VX ** 2 + VY ** 2)
      NNNA = NA(I)
      WRITE (2,60) NNNA,VX,VY,V,THETA
      VX = 0.0
      VY = 0.0
50    CONTINUE
60    FORMAT(1H0,6X,4HNODE,I6,5X,4HVX =,E11.4,5X,4HVY =,E11.4,
     1   5X,3HV =,E11.4,5X,7HTHETA =,F7.2)
70    FORMAT(1H , 8X,46HPOTENTIAL FLOW CALCULATION - ANGLES IN DEGREES//
     1/,1H ,4HV0 =,  E11.4//)
80    FORMAT(1H1)
120   FORMAT(1H ,4X,4HNODE,I6,5X,3HVX=,E11.4,5X,3HVY=,E11.4/,
     15X,3HV =,E11.4,5X,6HTHETA=,F7.2)
      RETURN
      END
      SUBROUTINE PRESS (JJJ,CNDDD)
C	THIS SUBROUTINE CALCULATES PRESSURE CONDUCTANCE
      DIMENSION T(650),C(4000),NA(4000),NB(4000),Q(650)
      DIMENSION RF(50),CTYPE(4000),CURVE(20)
      COMMON/BLK1/T,C,NA,NB,Q/BLK3/RF,CTYPE,CURVE
      INTEGER CTYPE,CURVE
      N1 = IABS(NA(JJJ))
      N2 = IABS(NB(JJJ))
      ITEST = CTYPE(JJJ) - 400
      GO TO (10,20),ITEST
C	FLOW RESISTANCE BASED ON LINEAR DEPENDENCE OF PRESSURE LOSS
C	VS. AIRFLOW.
10    CNDDD = 1.0 / C(JJJ)
      GO TO 30
C	CFM REQUIRED FROM PREVIOUS ITERATION
C	FLOW RESISTANCE BASED ON QUADRATIC DEPENDENCE OF PRESSURE
C	LOSS VS. AIRFLOW, T.C.E.E., E6.9.
20    DELP = T(N1) - T(N2)
      IF (ABS(DELP) .LT. 0.00001) DELP = 0.00001
      CNDDD = 1.0 / SQRT(ABS(DELP) * C(JJJ))
30    CONTINUE
      RETURN
      END
